{
  "app.__init__": {
    "path": "app/__init__.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/__init__.py",
    "lines_of_code": 6,
    "imports": [],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": "AI-CHAT Application Package\n\nVersion: 2.0.0"
  },
  "app.rag.query_router": {
    "path": "app/rag/query_router.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/query_router.py",
    "lines_of_code": 303,
    "imports": [
      "re",
      "enum",
      "enum.Enum",
      "pathlib",
      "pathlib.Path",
      "yaml",
      "typing",
      "typing.Dict",
      "typing.Any",
      "app.core.logging",
      "app.core.logging.get_logger",
      "typing",
      "typing.List",
      "typing.Tuple",
      "typing.Optional"
    ],
    "functions": [
      {
        "name": "_norm",
        "line": 25,
        "docstring": "\ubb38\uc790\uc5f4 \uc815\uaddc\ud654: \uc18c\ubb38\uc790 + \uacf5\ubc31/\ud2b9\uc218\ubb38\uc790 \uc81c\uac70",
        "args": [
          "s"
        ],
        "is_async": false
      },
      {
        "name": "_score",
        "line": 34,
        "docstring": "\ubd80\ubd84 \ud3ec\ud568 + \uae38\uc774 \uadfc\uc811 \ud63c\ud569 \uc2a4\ucf54\uc5b4 (0~1)",
        "args": [
          "qn",
          "tn"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 99,
        "docstring": "\ucd08\uae30\ud654\n\nArgs:\n    config_path: \uc124\uc815 \ud30c\uc77c \uacbd\ub85c",
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "_load_config",
        "line": 120,
        "docstring": "\uc124\uc815 \ud30c\uc77c \ub85c\ub4dc\n\nArgs:\n    config_path: \uc124\uc815 \ud30c\uc77c \uacbd\ub85c\n\nReturns:\n    \uc124\uc815 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "classify_mode",
        "line": 144,
        "docstring": "\ucffc\ub9ac \ubaa8\ub4dc \ubd84\ub958 (\uc6b0\uc120\uc21c\uc704: COST_SUM > PREVIEW > LIST > SUMMARY > QA)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758\n\nReturns:\n    QueryMode (COST_SUM, PREVIEW, LIST, SUMMARY, QA \uc911 \ud558\ub098)",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "get_routing_reason",
        "line": 204,
        "docstring": "\ubaa8\ub4dc \ub77c\uc6b0\ud305 \uc774\uc720 \ubc18\ud658 (\ub85c\uae45\uc6a9)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758\n\nReturns:\n    \ub77c\uc6b0\ud305 \uc774\uc720 \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "classify_mode_with_hits",
        "line": 262,
        "docstring": "\uac80\uc0c9 \uacb0\uacfc(hits)\ub97c \uace0\ub824\ud55c \ubaa8\ub4dc \ubd84\ub958 + \ub2e8\uc77c \ud6c4\ubcf4 \ud655\uc815\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758\n    hits: \uac80\uc0c9 \uacb0\uacfc \ub9ac\uc2a4\ud2b8 (filename, title \ub4f1 \ud3ec\ud568)\n\nReturns:\n    (QueryMode, filtered_hits or None)",
        "args": [
          "self",
          "query",
          "hits"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "QueryMode",
        "line": 45,
        "docstring": "\ucffc\ub9ac \ubaa8\ub4dc",
        "methods": [],
        "bases": [
          "Enum"
        ]
      },
      {
        "name": "QueryRouter",
        "line": 55,
        "docstring": "\ucffc\ub9ac \ubaa8\ub4dc \ub77c\uc6b0\ud130",
        "methods": [
          "__init__",
          "_load_config",
          "classify_mode",
          "get_routing_reason",
          "classify_mode_with_hits"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\ucffc\ub9ac \ubaa8\ub4dc \ub77c\uc6b0\ud130\n2025-10-26\n\n\uc9c8\uc758 \uc758\ub3c4\ub97c \ubd84\uc11d\ud558\uc5ec Q&A \ubaa8\ub4dc vs \ubb38\uc11c \ubbf8\ub9ac\ubcf4\uae30 \ubaa8\ub4dc\ub97c \uacb0\uc815\ud569\ub2c8\ub2e4.\n\n\uaddc\uce59:\n- Q&A \uc758\ub3c4 \ud0a4\uc6cc\ub4dc\uac00 \uc788\uc73c\uba74 \ud30c\uc77c\uba85\uc774 \uc788\uc5b4\ub3c4 Q&A \ubaa8\ub4dc \uc6b0\uc120\n- \ud30c\uc77c\uba85\ub9cc \uc788\uace0 Q&A \uc758\ub3c4\uac00 \uc5c6\uc73c\uba74 \ubbf8\ub9ac\ubcf4\uae30 \ubaa8\ub4dc"
  },
  "app.rag.query_parser": {
    "path": "app/rag/query_parser.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/query_parser.py",
    "lines_of_code": 197,
    "imports": [
      "re",
      "yaml",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Optional",
      "typing.Dict",
      "typing.Set",
      "difflib",
      "difflib.SequenceMatcher",
      "logging"
    ],
    "functions": [
      {
        "name": "parse_filters_simple",
        "line": 186,
        "docstring": "\uac04\ub2e8\ud55c \ud30c\uc2f1 \ud568\uc218 (\ud568\uc218\ud615 API)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758\n    known_drafters: \uace0\uc720 \uae30\uc548\uc790 \uc9d1\ud569\n\nReturns:\n    {\"year\": str, \"drafter\": str, \"source\": str}",
        "args": [
          "query",
          "known_drafters"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 22,
        "docstring": "Args:\n    known_drafters: DB\uc5d0\uc11c \ub85c\ub4dc\ud55c \uace0\uc720 \uae30\uc548\uc790 \uc9d1\ud569",
        "args": [
          "self",
          "known_drafters"
        ],
        "is_async": false
      },
      {
        "name": "_load_stopwords",
        "line": 33,
        "docstring": "\ubd88\uc6a9\uc5b4 \ub85c\ub4dc",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_load_token_patterns",
        "line": 43,
        "docstring": "\ud1a0\ud070 \ud328\ud134 \ub85c\ub4dc",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "parse_filters",
        "line": 53,
        "docstring": "\ucffc\ub9ac\uc5d0\uc11c \ud544\ud130 \ucd94\ucd9c (\uc6b0\uc120\uc21c\uc704: \ud1a0\ud070 > Closed-World > \ud328\ud134)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758\n\nReturns:\n    dict: {\"year\": str, \"drafter\": str, \"source\": str}",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_extract_from_tokens",
        "line": 87,
        "docstring": "\ud1a0\ud070 \ubb38\ubc95 \ucd94\ucd9c (year:2024, drafter:\ucd5c\uc0c8\ub984)",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_extract_year",
        "line": 109,
        "docstring": "\uc5f0\ub3c4 \ucd94\ucd9c",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_extract_drafter_closed_world",
        "line": 114,
        "docstring": "\uae30\uc548\uc790 \ucd94\ucd9c - Closed-World Validation\n\nReturns:\n    (drafter, source): (\uae30\uc548\uc790\uba85, \ucd9c\ucc98: 'closed_world'|'fuzzy'|None)",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_normalize_name",
        "line": 152,
        "docstring": "\uc774\ub984 \uc815\uaddc\ud654 (\uacf5\ubc31 \uc81c\uac70, \uc601\ubb38 \uc18c\ubb38\uc790\ud654)",
        "args": [
          "self",
          "name"
        ],
        "is_async": false
      },
      {
        "name": "_fuzzy_match",
        "line": 159,
        "docstring": "\uc720\uc0ac\ub3c4 \uae30\ubc18 \ub9e4\uce6d\n\nArgs:\n    query: \uac80\uc0c9 \ubb38\uc790\uc5f4\n    candidates: \ud6c4\ubcf4 \uc9d1\ud569\n    threshold: \uc720\uc0ac\ub3c4 \uc784\uacc4\uac12 (0.0-1.0)\n\nReturns:\n    \uac00\uc7a5 \uc720\uc0ac\ud55c \ud6c4\ubcf4 \ub610\ub294 None",
        "args": [
          "self",
          "query",
          "candidates",
          "threshold"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "QueryParser",
        "line": 19,
        "docstring": "\ucffc\ub9ac \ud30c\uc11c - Closed-World Validation \uc801\uc6a9",
        "methods": [
          "__init__",
          "_load_stopwords",
          "_load_token_patterns",
          "parse_filters",
          "_extract_from_tokens",
          "_extract_year",
          "_extract_drafter_closed_world",
          "_normalize_name",
          "_fuzzy_match"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\ucffc\ub9ac \ud30c\uc2f1 \ubaa8\ub4c8 - Closed-World Validation\n\uae30\uc548\uc790/\uc5f0\ub3c4 \ucd94\ucd9c\uc744 \uba54\ud0c0\ub370\uc774\ud130 DB \uae30\ubc18\uc73c\ub85c \uac80\uc99d"
  },
  "app.rag.pipeline": {
    "path": "app/rag/pipeline.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/pipeline.py",
    "lines_of_code": 2140,
    "imports": [
      "os",
      "time",
      "base64",
      "sqlite3",
      "pathlib",
      "pathlib.Path",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "typing",
      "typing.Protocol",
      "typing.List",
      "typing.Optional",
      "typing.Dict",
      "typing.Any",
      "app.core.logging",
      "app.core.logging.get_logger",
      "app.core.errors",
      "app.core.errors.ModelError",
      "app.core.errors.SearchError",
      "app.core.errors.ErrorCode",
      "app.core.errors.ERROR_MESSAGES",
      "app.rag.query_router",
      "app.rag.query_router.QueryRouter",
      "app.rag.query_router.QueryMode",
      "re",
      "modules.metadata_db",
      "modules.metadata_db.MetadataDB",
      "app.rag.query_parser",
      "app.rag.query_parser.QueryParser",
      "re",
      "sqlite3",
      "pathlib",
      "pathlib.Path",
      "os",
      "pdfplumber",
      "re",
      "sqlite3",
      "pdfplumber",
      "app.rag.summary_templates",
      "app.rag.summary_templates.detect_doc_kind",
      "app.rag.summary_templates.build_prompt",
      "app.rag.summary_templates.parse_summary_json",
      "app.rag.summary_templates.format_summary_output",
      "app.rag.utils.json_utils",
      "app.rag.utils.json_utils.parse_summary_json_robust",
      "app.rag.utils.json_utils.ensure_citations",
      "app.rag.utils.json_utils.validate_numeric_fields",
      "os",
      "app.rag.utils.context_hydrator",
      "app.rag.utils.context_hydrator.hydrate_context",
      "re",
      "sqlite3",
      "re",
      "modules.metadata_db",
      "modules.metadata_db.MetadataDB",
      "sqlite3",
      "pdf2image",
      "pdf2image.convert_from_path",
      "pytesseract",
      "PIL",
      "PIL.Image",
      "modules.metadata_db",
      "modules.metadata_db.MetadataDB",
      "re",
      "re",
      "paddleocr",
      "paddleocr.PaddleOCR",
      "re",
      "modules.metadata_db",
      "modules.metadata_db.MetadataDB",
      "app.rag.retrievers.hybrid",
      "app.rag.retrievers.hybrid.HybridRetriever",
      "numpy",
      "pdfplumber",
      "pathlib",
      "pathlib.Path"
    ],
    "functions": [
      {
        "name": "_encode_file_ref",
        "line": 27,
        "docstring": "\ud30c\uc77c\uba85\uc744 base64 ref\ub85c \uc778\ucf54\ub529 (docs \ud558\uc704 \uacbd\ub85c \ucc3e\uae30)\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n\nReturns:\n    base64 \uc778\ucf54\ub529\ub41c ref \ub610\ub294 None",
        "args": [
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "search",
        "line": 143,
        "docstring": "\uac80\uc0c9 \uc218\ud589 (\uc815\uaddc\ud654 \uc2a4\ud0a4\ub9c8 \ubc18\ud658)\n\nArgs:\n    query: \uac80\uc0c9 \uc9c8\uc758\n    top_k: \uc0c1\uc704 K\uac1c \uacb0\uacfc\n\nReturns:\n    [\n        {\n            \"doc_id\": str,\n            \"page\": int,\n            \"score\": float,\n            \"snippet\": str,\n            \"meta\": dict\n        }, ...\n    ]",
        "args": [
          "self",
          "query",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "compress",
        "line": 167,
        "docstring": "\ubb38\uc11c \uc555\ucd95\n\nArgs:\n    chunks: \uc6d0\ubcf8 \uccad\ud06c \ubaa9\ub85d (\uc815\uaddc\ud654\ub41c dict)\n    ratio: \uc555\ucd95 \ube44\uc728\n\nReturns:\n    \uc555\ucd95\ub41c \uccad\ud06c \ubaa9\ub85d (\ub3d9\uc77c \uc2a4\ud0a4\ub9c8)",
        "args": [
          "self",
          "chunks",
          "ratio"
        ],
        "is_async": false
      },
      {
        "name": "generate",
        "line": 185,
        "docstring": "\ub2f5\ubcc0 \uc0dd\uc131\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n    context: \ucc38\uace0 \ubb38\uc11c\n    temperature: \uc0dd\uc131 \uc628\ub3c4\n\nReturns:\n    \uc0dd\uc131\ub41c \ub2f5\ubcc0",
        "args": [
          "self",
          "query",
          "context",
          "temperature"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 218,
        "docstring": "RAG \ud30c\uc774\ud504\ub77c\uc778 \ucd08\uae30\ud654\n\nArgs:\n    retriever: \uac80\uc0c9 \uc5d4\uc9c4 (None\uc774\uba74 \uae30\ubcf8 HybridRetriever \uc0ac\uc6a9)\n    compressor: \uc555\ucd95\uae30 (None\uc774\uba74 \uae30\ubcf8 ContextCompressor \uc0ac\uc6a9)\n    generator: LLM \uc0dd\uc131\uae30 (None\uc774\uba74 \uae30\ubcf8 LlamaCppGenerator \uc0ac\uc6a9)",
        "args": [
          "self",
          "retriever",
          "compressor",
          "generator"
        ],
        "is_async": false
      },
      {
        "name": "query",
        "line": 241,
        "docstring": "RAG \uc9c8\uc758 (\ub2e8\uc77c \uc9c4\uc785\uc810)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n    top_k: \uac80\uc0c9 \uacb0\uacfc \uac1c\uc218\n    compression_ratio: \uc555\ucd95 \ube44\uc728\n    use_hyde: HyDE \uc0ac\uc6a9 \uc5ec\ubd80\n    temperature: LLM \uc0dd\uc131 \uc628\ub3c4\n\nReturns:\n    RAGResponse: \ub2f5\ubcc0 + \uba54\ud0c0\ub370\uc774\ud130",
        "args": [
          "self",
          "query",
          "top_k",
          "compression_ratio",
          "use_hyde",
          "temperature"
        ],
        "is_async": false
      },
      {
        "name": "_make_response",
        "line": 417,
        "docstring": "\ud45c\uc900 \uc751\ub2f5 \uad6c\uc870 \uc0dd\uc131 (citations \ud3ec\ud568)\n\nArgs:\n    text: \uc0dd\uc131\ub41c \ub2f5\ubcc0 \ud14d\uc2a4\ud2b8\n    selected: \uc2e4\uc81c \uc0ac\uc6a9\ub41c \uccad\ud06c \ub9ac\uc2a4\ud2b8 (\uc555\ucd95 \ud6c4)\n    retrieved: \uac80\uc0c9\ub41c \uc6d0\ubcf8 \uacb0\uacfc \ub9ac\uc2a4\ud2b8\n\nReturns:\n    \ud45c\uc900\ud654\ub41c \uc751\ub2f5 dict (citations \ud544\uc218)",
        "args": [
          "self",
          "text",
          "selected",
          "retrieved"
        ],
        "is_async": false
      },
      {
        "name": "answer",
        "line": 459,
        "docstring": "\ub2f5\ubcc0 \uc0dd\uc131 (Evidence \ud3ec\ud568 \uad6c\uc870\ud654\ub41c \uc751\ub2f5)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n    top_k: \uac80\uc0c9 \uacb0\uacfc \uac1c\uc218 (None\uc774\uba74 \uae30\ubcf8\uac12 5)\n\nReturns:\n    dict: {\n        \"text\": \ub2f5\ubcc0 \ud14d\uc2a4\ud2b8,\n        \"citations\": \ucc38\uace0 \ubb38\uc11c \ubaa9\ub85d (\ud45c\uc900 \ud0a4),\n        \"evidence\": \ucc38\uace0 \ubb38\uc11c \ubaa9\ub85d (\ud558\uc704 \ud638\ud658),\n        \"status\": {\n            \"retrieved_count\": int,\n            \"selected_count\": int,\n            \"found\": bool\n        }\n    }",
        "args": [
          "self",
          "query",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "answer_text",
        "line": 832,
        "docstring": "\ub2f5\ubcc0 \ud14d\uc2a4\ud2b8\ub9cc \ubc18\ud658 (\ud558\uc704 \ud638\ud658\uc131)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n\nReturns:\n    str: \uc0dd\uc131\ub41c \ub2f5\ubcc0 \ud14d\uc2a4\ud2b8",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_answer_list",
        "line": 844,
        "docstring": "\ubaa9\ub85d \uac80\uc0c9 (2\uc904 \uce74\ub4dc \ud615\uc2dd) - Closed-World Validation \uc801\uc6a9\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758 (\uc608: \"2024\ub144 \ub0a8\uc900\uc218 \ubb38\uc11c \ucc3e\uc544\uc918\", \"year:2024 drafter:\ucd5c\uc0c8\ub984\")\n\nReturns:\n    dict: \ud45c\uc900 \uc751\ub2f5 \uad6c\uc870 (2\uc904 \uce74\ub4dc \ubaa9\ub85d)",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_answer_cost_sum",
        "line": 1000,
        "docstring": "\ube44\uc6a9 \ud569\uacc4 \uc9c1\uc811 \uc870\ud68c (DB claimed_total \ud65c\uc6a9)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758 (\uc608: \"\ucc44\ub110\uc5d0\uc774 \uc911\uacc4\ucc28 \ubcf4\uc218 \ud569\uacc4 \uc5bc\ub9c8\uc600\uc9c0?\")\n\nReturns:\n    dict: \ud45c\uc900 \uc751\ub2f5 \uad6c\uc870 (text, citations, evidence, status)",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_answer_preview",
        "line": 1112,
        "docstring": "\ubb38\uc11c \ubbf8\ub9ac\ubcf4\uae30 (\uc6d0\ubb38 \uc778\uc6a9, \uac00\uc9dc \ud45c \uc0dd\uc131 \uae08\uc9c0)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758 (\uc608: \"[\ud30c\uc77c\uba85].pdf \ubbf8\ub9ac\ubcf4\uae30\")\n\nReturns:\n    dict: \ud45c\uc900 \uc751\ub2f5 \uad6c\uc870 (\uc6d0\ubb38 6-8\uc904)",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_safe_fname",
        "line": 1235,
        "docstring": "\ud30c\uc77c\uba85 \uc548\uc804 \ucd94\ucd9c (\ub2e4\uc591\ud55c \uc18c\uc2a4\uc5d0\uc11c \uc2dc\ub3c4)\n\nArgs:\n    meta: \uba54\ud0c0\ub370\uc774\ud130 \ub515\uc154\ub108\ub9ac\n    doc_path: \ubb38\uc11c \uacbd\ub85c\n\nReturns:\n    \uc548\uc804\ud558\uac8c \ucd94\ucd9c\ub41c \ud30c\uc77c\uba85 (\uae30\ubcf8\uac12: '\ubbf8\uc0c1 \ubb38\uc11c')",
        "args": [
          "self",
          "meta",
          "doc_path"
        ],
        "is_async": false
      },
      {
        "name": "_make_chunks_for_doc",
        "line": 1260,
        "docstring": "\ud2b9\uc815 \ubb38\uc11c\uc758 \uccad\ud06c\ub9cc \ub85c\ub4dc (\ubb38\uc11c \uace0\uc815 \ubaa8\ub4dc\uc6a9)\n\nArgs:\n    filename: \ubb38\uc11c \ud30c\uc77c\uba85\n\nReturns:\n    \ud574\ub2f9 \ubb38\uc11c\uc758 \uccad\ud06c \ub9ac\uc2a4\ud2b8",
        "args": [
          "self",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "_extract_with_ocr",
        "line": 1305,
        "docstring": "OCR\uc744 \uc0ac\uc6a9\ud558\uc5ec PDF\uc5d0\uc11c \ud14d\uc2a4\ud2b8 \ucd94\ucd9c (pytesseract \uc6b0\uc120, paddleocr \ud3f4\ubc31)\n\nArgs:\n    pdf_path: PDF \ud30c\uc77c \uacbd\ub85c\n    start_page: \uc2dc\uc791 \ud398\uc774\uc9c0 (0-based)\n    total_pages: \uc804\uccb4 \ud398\uc774\uc9c0 \uc218\n\nReturns:\n    \ucd94\ucd9c\ub41c \ud14d\uc2a4\ud2b8",
        "args": [
          "self",
          "pdf_path",
          "start_page",
          "total_pages"
        ],
        "is_async": false
      },
      {
        "name": "_gather_summary_context",
        "line": 1369,
        "docstring": "\uc694\uc57d\uc6a9 \ucee8\ud14d\uc2a4\ud2b8 \uc218\uc9d1 (PDF \ub05d + RAG \uccad\ud06c + \uc2a4\ub0c5\uc0f7)\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n    pdf_path: PDF \ud30c\uc77c \uacbd\ub85c\n    doc_locked: True\uba74 \ud574\ub2f9 \ubb38\uc11c \uccad\ud06c\ub9cc \uc0ac\uc6a9 (\ub2e4\ub978 \ubb38\uc11c \uac80\uc0c9 \uae08\uc9c0)\n\nReturns:\n    \uc218\uc9d1\ub41c \ucee8\ud14d\uc2a4\ud2b8 \ud14d\uc2a4\ud2b8 (\ucd5c\ub300 10,000\uc790)",
        "args": [
          "self",
          "filename",
          "pdf_path",
          "doc_locked"
        ],
        "is_async": false
      },
      {
        "name": "_answer_summary",
        "line": 1449,
        "docstring": "\ub0b4\uc6a9 \uc694\uc57d (\ubb38\uc11c \ud0c0\uc785 \uc790\ub3d9 \uac10\uc9c0 + \ub9de\ucda4 \ud504\ub86c\ud504\ud2b8)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758 (\uc608: \"[\ud30c\uc77c\uba85].pdf \ub0b4\uc6a9 \uc694\uc57d\ud574\uc918\" \ub610\ub294 \"\ubbf8\ub7ec\ud074\ub7a9 \uce74\uba54\ub77c \uc0bc\uac01\ub300 \uae30\uc220\uac80\ud1a0\uc11c \uc774\ubb38\uc11c \ub0b4\uc6a9 \uc694\uc57d\ud5e4\uc918\")\n\nReturns:\n    dict: \ud45c\uc900 \uc751\ub2f5 \uad6c\uc870 (JSON \uae30\ubc18 \uc694\uc57d)",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "warmup",
        "line": 1820,
        "docstring": "\uc6cc\ubc0d\uc5c5: LLM + \uc778\ub371\uc2a4 \uc0ac\uc804 \ub85c\ub529\n\n\uccab \ucffc\ub9ac \uc9c0\uc5f0 \uc81c\uac70\ub97c \uc704\ud574 \uc2dc\uc791 \uc2dc \ud638\ucd9c.",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_create_default_retriever",
        "line": 1840,
        "docstring": "\uae30\ubcf8 \uac80\uc0c9 \uc5d4\uc9c4 \uc0dd\uc131 (v2 \ub610\ub294 v1)\n\n\ud658\uacbd \ubcc0\uc218 USE_V2_RETRIEVER\ub85c \uc81c\uc5b4:\n- true: HybridRetrieverV2 \uc0ac\uc6a9 (\uc2e0\uaddc 2-layer \uc544\ud0a4\ud14d\ucc98)\n- false/\uc5c6\uc74c: HybridRetriever \uc0ac\uc6a9 (\uae30\uc874 \ub808\uac70\uc2dc)",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_create_default_compressor",
        "line": 1882,
        "docstring": "\uae30\ubcf8 \uc555\ucd95\uae30 \uc0dd\uc131 (\ud604\uc7ac\ub294 no-op)",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_create_default_generator",
        "line": 1887,
        "docstring": "\uae30\ubcf8 LLM \uc0dd\uc131\uae30 \uc0dd\uc131 (\ub808\uac70\uc2dc \uc5b4\ub311\ud130 \uc0ac\uc6a9)",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_create_legacy_adapter",
        "line": 1898,
        "docstring": "\ub808\uac70\uc2dc \uad6c\ud604 \uc5b4\ub311\ud130 \uc0dd\uc131 (\ucea1\uc290\ud654)\n\nQuickFixRAG\ub97c \ub798\ud551\ud558\uc5ec \uae30\uc874 \ub808\uac70\uc2dc \uc2dc\uc2a4\ud15c\uacfc \uc5f0\uacb0\ud569\ub2c8\ub2e4.\n\ud5a5\ud6c4 \uc774 \uba54\uc11c\ub4dc\ub9cc \uc218\uc815\ud558\uc5ec \uc2e0\uaddc \uad6c\ud604\uc73c\ub85c \uc810\uc9c4 \uc804\ud658 \uac00\ub2a5.\n\nReturns:\n    QuickFixRAG: \ub808\uac70\uc2dc RAG \uc778\uc2a4\ud134\uc2a4",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_load_known_drafters",
        "line": 1911,
        "docstring": "\uba54\ud0c0DB\uc5d0\uc11c \uace0\uc720 \uae30\uc548\uc790 \ub85c\ub4dc (Closed-World Validation\uc6a9)\n\nReturns:\n    set: \uace0\uc720 \uae30\uc548\uc790 \uc774\ub984 \uc9d1\ud569",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "search",
        "line": 1939,
        "docstring": null,
        "args": [
          "self",
          "query",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "compress",
        "line": 1947,
        "docstring": null,
        "args": [
          "self",
          "chunks",
          "ratio"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 1957,
        "docstring": null,
        "args": [
          "self",
          "rag"
        ],
        "is_async": false
      },
      {
        "name": "generate",
        "line": 1961,
        "docstring": null,
        "args": [
          "self",
          "query",
          "context",
          "temperature"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 2036,
        "docstring": "Args:\n    v2_retriever: HybridRetrieverV2 instance",
        "args": [
          "self",
          "v2_retriever"
        ],
        "is_async": false
      },
      {
        "name": "search",
        "line": 2044,
        "docstring": "Search using v2 retriever, convert to v1 format\n\nArgs:\n    query: Search query\n    top_k: Number of results\n\nReturns:\n    List of dicts in v1 format with keys:\n    - doc_id: Document ID\n    - snippet: Text snippet\n    - page: Page number (default 1)\n    - score: Relevance score\n    - meta: Metadata dict",
        "args": [
          "self",
          "query",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "warmup",
        "line": 2130,
        "docstring": "\uc6cc\ubc0d\uc5c5 (v2\ub294 \ud544\uc694 \uc2dc \uc790\ub3d9 \ub85c\ub4dc)",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "generate",
        "line": 2138,
        "docstring": null,
        "args": [
          "self",
          "query",
          "context",
          "temperature"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "RAGRequest",
        "line": 90,
        "docstring": "RAG \uc694\uccad \ud30c\ub77c\ubbf8\ud130\n\nAttributes:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n    top_k: \uac80\uc0c9 \uacb0\uacfc \uac1c\uc218\n    compression_ratio: \ucee8\ud14d\uc2a4\ud2b8 \uc555\ucd95 \ube44\uc728 (0.0~1.0)\n    use_hyde: HyDE \uc0ac\uc6a9 \uc5ec\ubd80\n    temperature: LLM \uc0dd\uc131 \uc628\ub3c4",
        "methods": [],
        "bases": []
      },
      {
        "name": "RAGResponse",
        "line": 109,
        "docstring": "RAG \uc751\ub2f5 \uacb0\uacfc\n\nAttributes:\n    answer: \uc0dd\uc131\ub41c \ub2f5\ubcc0\n    source_docs: \ucc38\uace0 \ubb38\uc11c \ubaa9\ub85d (\ud558\uc704 \ud638\ud658)\n    evidence_chunks: Evidence\uc6a9 \uc815\uaddc\ud654 \uccad\ud06c (\uad8c\uc7a5)\n    raw_results: \uc6d0\ubcf8 \uac80\uc0c9 \uacb0\uacfc (Evidence \ucd5c\uc18c \ubcf4\uc7a5\uc6a9)\n    latency: \uc804\uccb4 \uc2e4\ud589 \uc2dc\uac04 (\ucd08)\n    success: \uc131\uacf5 \uc5ec\ubd80\n    error: \uc5d0\ub7ec \uba54\uc2dc\uc9c0 (\uc2e4\ud328 \uc2dc)\n    metrics: \ub0b4\ubd80 \uc9c0\ud45c (\uac80\uc0c9/\uc555\ucd95/\uc0dd\uc131 \uc2dc\uac04 \ub4f1)\n    diagnostics: \uc9c4\ub2e8 \uc815\ubcf4 (DIAG_RAG=true\uc77c \ub54c\ub9cc \ucc44\uc6cc\uc9d0)",
        "methods": [],
        "bases": []
      },
      {
        "name": "Retriever",
        "line": 140,
        "docstring": "\uac80\uc0c9 \uc5d4\uc9c4 \uc778\ud130\ud398\uc774\uc2a4",
        "methods": [
          "search"
        ],
        "bases": [
          "Protocol"
        ]
      },
      {
        "name": "Compressor",
        "line": 164,
        "docstring": "\ucee8\ud14d\uc2a4\ud2b8 \uc555\ucd95\uae30 \uc778\ud130\ud398\uc774\uc2a4",
        "methods": [
          "compress"
        ],
        "bases": [
          "Protocol"
        ]
      },
      {
        "name": "Generator",
        "line": 182,
        "docstring": "LLM \uc0dd\uc131\uae30 \uc778\ud130\ud398\uc774\uc2a4",
        "methods": [
          "generate"
        ],
        "bases": [
          "Protocol"
        ]
      },
      {
        "name": "RAGPipeline",
        "line": 204,
        "docstring": "RAG \ud30c\uc774\ud504\ub77c\uc778 \ud30c\uc0ac\ub4dc\n\n\uac80\uc0c9 \u2192 \uc555\ucd95 \u2192 \uc0dd\uc131\uc744 \ub2e8\uc77c \uc778\ud130\ud398\uc774\uc2a4\ub85c \uc81c\uacf5.\n\ub0b4\ubd80 \uad6c\ud604\uc740 Retriever/Compressor/Generator\uc5d0 \uc704\uc784.\n\nExample:\n    >>> pipeline = RAGPipeline()\n    >>> response = pipeline.query(\"\uc9c8\ubb38\", top_k=5)\n    >>> if response.success:\n    ...     print(response.answer)\n    ...     print(f\"\ucc38\uace0: {response.source_docs}\")",
        "methods": [
          "__init__",
          "query",
          "_make_response",
          "answer",
          "answer_text",
          "_answer_list",
          "_answer_cost_sum",
          "_answer_preview",
          "_safe_fname",
          "_make_chunks_for_doc",
          "_extract_with_ocr",
          "_gather_summary_context",
          "_answer_summary",
          "warmup",
          "_create_default_retriever",
          "_create_default_compressor",
          "_create_default_generator",
          "_create_legacy_adapter",
          "_load_known_drafters"
        ],
        "bases": []
      },
      {
        "name": "_DummyRetriever",
        "line": 1936,
        "docstring": "\ub354\ubbf8 \uac80\uc0c9\uae30 (\ud3f4\ubc31\uc6a9)",
        "methods": [
          "search"
        ],
        "bases": []
      },
      {
        "name": "_NoOpCompressor",
        "line": 1944,
        "docstring": "No-op \uc555\ucd95\uae30 (\uc555\ucd95\ud558\uc9c0 \uc54a\uc74c)",
        "methods": [
          "compress"
        ],
        "bases": []
      },
      {
        "name": "_QuickFixGenerator",
        "line": 1954,
        "docstring": "QuickFixRAG \ub798\ud37c (\uae30\uc874 \uad6c\ud604 \ud65c\uc6a9)",
        "methods": [
          "__init__",
          "generate"
        ],
        "bases": []
      },
      {
        "name": "_V2RetrieverAdapter",
        "line": 2015,
        "docstring": "V2 Retriever Adapter\n\nHybridRetrieverV2\uc758 \uacb0\uacfc \ud615\uc2dd {\"fused_results\": [...]}\ub97c\nv1 \uc778\ud130\ud398\uc774\uc2a4 \ud615\uc2dd [...] \uc73c\ub85c \ubcc0\ud658.\n\nv2 results \uad6c\uc870:\n    {\n        \"fused_results\": [\n            {\"id\": \"doc_4094\", \"score\": 0.123, \"filename\": \"...\", ...},\n            ...\n        ]\n    }\n\nv1 expected \uad6c\uc870:\n    [\n        {\"doc_id\": \"doc_4094\", \"snippet\": \"...\", \"page\": 1, ...},\n        ...\n    ]",
        "methods": [
          "__init__",
          "search",
          "warmup"
        ],
        "bases": []
      },
      {
        "name": "_DummyGenerator",
        "line": 2135,
        "docstring": "\ub354\ubbf8 \uc0dd\uc131\uae30 (\ud3f4\ubc31\uc6a9)",
        "methods": [
          "generate"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "RAG \ud30c\uc774\ud504\ub77c\uc778 (\ud30c\uc0ac\ub4dc \ud328\ud134)\n\n\ub2e8\uc77c \uc9c4\uc785\uc810: RAGPipeline.query()\n\ub0b4\ubd80 \ud750\ub984: \uac80\uc0c9 \u2192 \uc555\ucd95 \u2192 LLM \uc0dd\uc131\n\nExample:\n    >>> pipeline = RAGPipeline()\n    >>> response = pipeline.query(\"\uc9c8\ubb38\", top_k=5)\n    >>> print(response.answer)"
  },
  "app.rag.summary_templates": {
    "path": "app/rag/summary_templates.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/summary_templates.py",
    "lines_of_code": 477,
    "imports": [
      "typing",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "typing.Tuple",
      "json",
      "re"
    ],
    "functions": [
      {
        "name": "detect_doc_kind",
        "line": 14,
        "docstring": "\ud30c\uc77c\uba85 + \ubcf8\ubb38\uc73c\ub85c \ubb38\uc11c \uc885\ub958 \uc790\ub3d9 \uac10\uc9c0\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n    text: \ubb38\uc11c \ubcf8\ubb38 (\uc55e\ubd80\ubd84 2000\uc790 \uc815\ub3c4)\n\nReturns:\n    \ubb38\uc11c \uc885\ub958: consumables/repair/proc_eval/disposal/minutes/generic",
        "args": [
          "filename",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_recheck_money_and_decision",
        "line": 49,
        "docstring": "\ubcf8\ubb38 \uc7ac\uc2a4\uce94\uc73c\ub85c \"\uc5c6\uc74c\" \ub0a8\ubc1c \ubc29\uc9c0\n\nArgs:\n    text: \ubb38\uc11c \ubcf8\ubb38\n    claimed_total: \ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c \ucd94\ucd9c\ud55c \uae08\uc561\n\nReturns:\n    (\uc7ac\ud655\uc778\ub41c \uae08\uc561, \uacb0\uc815\uc0ac\ud56d \uc874\uc7ac \uc5ec\ubd80)",
        "args": [
          "text",
          "claimed_total"
        ],
        "is_async": false
      },
      {
        "name": "build_prompt",
        "line": 77,
        "docstring": "\ubb38\uc11c \uc885\ub958\ubcc4 \ub9de\ucda4 \ud504\ub86c\ud504\ud2b8 \uc0dd\uc131\n\nArgs:\n    kind: \ubb38\uc11c \uc885\ub958 (repair/proc_eval/disposal/minutes/generic)\n    filename: \ud30c\uc77c\uba85\n    drafter: \uae30\uc548\uc790\n    display_date: \ub0a0\uc9dc\n    context_text: \ubb38\uc11c \ubcf8\ubb38 (RAG + PDF \ub05d + \uc2a4\ub0c5\uc0f7)\n    claimed_total: \ucd94\ucd9c\ub41c \uae08\uc561\n\nReturns:\n    LLM \ud504\ub86c\ud504\ud2b8 (system + user \ud1b5\ud569)",
        "args": [
          "kind",
          "filename",
          "drafter",
          "display_date",
          "context_text",
          "claimed_total"
        ],
        "is_async": false
      },
      {
        "name": "parse_summary_json",
        "line": 250,
        "docstring": "LLM \uc751\ub2f5\uc5d0\uc11c JSON \ucd94\ucd9c \ubc0f \ud30c\uc2f1 (\uac15\uac74\ud55c \ud30c\uc11c)\n\nArgs:\n    response: LLM \uc751\ub2f5 \ud14d\uc2a4\ud2b8\n\nReturns:\n    \ud30c\uc2f1\ub41c JSON dict, \uc2e4\ud328 \uc2dc None",
        "args": [
          "response"
        ],
        "is_async": false
      },
      {
        "name": "format_summary_output",
        "line": 284,
        "docstring": "JSON \uacb0\uacfc\ub97c \ub9c8\ud06c\ub2e4\uc6b4\uc73c\ub85c \ub3d9\uc801 \ub80c\ub354\ub9c1 (\uc874\uc7ac\ud558\ub294 \uc139\uc158\ub9cc \ud45c\uc2dc)\n\nArgs:\n    parsed_json: \ud30c\uc2f1\ub41c JSON\n    kind: \ubb38\uc11c \uc885\ub958\n    filename: \ud30c\uc77c\uba85\n    drafter: \uae30\uc548\uc790\n    display_date: \ub0a0\uc9dc\n    claimed_total: \uae08\uc561\n\nReturns:\n    \ub9c8\ud06c\ub2e4\uc6b4 \ud3ec\ub9f7 \uc694\uc57d \ud14d\uc2a4\ud2b8",
        "args": [
          "parsed_json",
          "kind",
          "filename",
          "drafter",
          "display_date",
          "claimed_total"
        ],
        "is_async": false
      }
    ],
    "classes": [],
    "entry_point": false,
    "docstring": "\ubb38\uc11c \uc720\ud615\ubcc4 \uc694\uc57d \ud504\ub86c\ud504\ud2b8 \ud15c\ud50c\ub9bf (v2)\n2025-10-27\n\n\ubaa9\uc801: \ubb38\uc11c \ud0c0\uc785 \uc790\ub3d9 \uac10\uc9c0 + \ub9de\ucda4 \ud504\ub86c\ud504\ud2b8\ub85c \uc694\uc57d \ud488\uc9c8 \uae09\uc0c1\uc2b9\n\ud575\uc2ec: \"\ud2c0 \ucc44\uc6b0\uae30\" \uc81c\uac70, \"\uc9c4\uc9dc \uc77d\uace0 \uc815\ub9ac\" \uad6c\ud604"
  },
  "app.rag.__init__": {
    "path": "app/rag/__init__.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/__init__.py",
    "lines_of_code": 15,
    "imports": [
      "app.rag.pipeline",
      "app.rag.pipeline.RAGPipeline",
      "app.rag.pipeline.RAGRequest",
      "app.rag.pipeline.RAGResponse"
    ],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": "RAG (Retrieval-Augmented Generation) Module\n\n\ud575\uc2ec \ucef4\ud3ec\ub10c\ud2b8:\n- pipeline: RAG \ud30c\uc0ac\ub4dc (\ub2e8\uc77c \uc9c4\uc785\uc810)\n- metrics: \uc131\ub2a5 \uc9c0\ud45c \uc218\uc9d1\n- retrievers: \uac80\uc0c9 \uc5d4\uc9c4\ub4e4"
  },
  "app.core.logging": {
    "path": "app/core/logging.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/core/logging.py",
    "lines_of_code": 104,
    "imports": [
      "logging",
      "sys",
      "pathlib",
      "pathlib.Path",
      "logging",
      "logging.Logger",
      "logging.StreamHandler",
      "logging.Formatter",
      "logging.handlers",
      "logging.handlers.RotatingFileHandler",
      "typing",
      "typing.Optional"
    ],
    "functions": [
      {
        "name": "_init_logger",
        "line": 24,
        "docstring": "\ub85c\uac70 \ucd08\uae30\ud654 (\ub0b4\ubd80 \ud568\uc218)\n\n- \ucf58\uc194 \ud578\ub4e4\ub7ec (INFO \uc774\uc0c1)\n- \ud30c\uc77c \ud578\ub4e4\ub7ec (DEBUG \uc774\uc0c1, \ub85c\ud14c\uc774\ud305)",
        "args": [],
        "is_async": false
      },
      {
        "name": "get_logger",
        "line": 77,
        "docstring": "\ub85c\uac70 \ud329\ud1a0\ub9ac (\uc804\uc5ed \uc9c4\uc785\uc810)\n\nArgs:\n    name: \ub85c\uac70 \uc774\ub984 (\ubcf4\ud1b5 __name__ \uc0ac\uc6a9)\n\nReturns:\n    Logger: \uc124\uc815\ub41c \ub85c\uac70\n\nExample:\n    >>> logger = get_logger(__name__)\n    >>> logger.info(\"\uc815\ubcf4 \uba54\uc2dc\uc9c0\")\n    >>> logger.warning(\"\uacbd\uace0 \uba54\uc2dc\uc9c0\")\n    >>> logger.error(\"\uc624\ub958 \uba54\uc2dc\uc9c0\", exc_info=True)",
        "args": [
          "name"
        ],
        "is_async": false
      },
      {
        "name": "set_level",
        "line": 96,
        "docstring": "\ub85c\uadf8 \ub808\ubca8 \ubcc0\uacbd\n\nArgs:\n    level: DEBUG, INFO, WARNING, ERROR, CRITICAL",
        "args": [
          "level"
        ],
        "is_async": false
      }
    ],
    "classes": [],
    "entry_point": false,
    "docstring": "\ud1b5\ud569 \ub85c\uae45 \uc2dc\uc2a4\ud15c\n\n\ubaa8\ub4e0 \ubaa8\ub4c8\uc740 \uc774 \ubaa8\ub4c8\uc758 get_logger()\ub97c \uc0ac\uc6a9\ud569\ub2c8\ub2e4.\n\nExample:\n    >>> from app.core.logging import get_logger\n    >>> logger = get_logger(__name__)\n    >>> logger.info(\"\uc2dc\uc2a4\ud15c \uc2dc\uc791\")\n    >>> logger.error(\"\uc624\ub958 \ubc1c\uc0dd\", exc_info=True)"
  },
  "app.core.errors": {
    "path": "app/core/errors.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/core/errors.py",
    "lines_of_code": 121,
    "imports": [],
    "functions": [
      {
        "name": "__init__",
        "line": 15,
        "docstring": null,
        "args": [
          "self",
          "message",
          "details"
        ],
        "is_async": false
      },
      {
        "name": "__str__",
        "line": 20,
        "docstring": null,
        "args": [
          "self"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "AppError",
        "line": 12,
        "docstring": "\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uae30\ubcf8 \uc608\uc678",
        "methods": [
          "__init__",
          "__str__"
        ],
        "bases": [
          "Exception"
        ]
      },
      {
        "name": "ConfigError",
        "line": 26,
        "docstring": "\uc124\uc815 \uad00\ub828 \uc608\uc678\n\nExample:\n    raise ConfigError(\"\uc124\uc815 \ud30c\uc77c \ub85c\ub4dc \uc2e4\ud328\", details=\"/path/to/config.json\")",
        "methods": [],
        "bases": [
          "AppError"
        ]
      },
      {
        "name": "DatabaseError",
        "line": 35,
        "docstring": "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uad00\ub828 \uc608\uc678\n\nExample:\n    raise DatabaseError(\"DB \uc5f0\uacb0 \uc2e4\ud328\", details=\"timeout after 5s\")",
        "methods": [],
        "bases": [
          "AppError"
        ]
      },
      {
        "name": "ModelError",
        "line": 44,
        "docstring": "AI \ubaa8\ub378 \uad00\ub828 \uc608\uc678\n\nExample:\n    raise ModelError(\"\ubaa8\ub378 \ub85c\ub4dc \uc2e4\ud328\", details=\"CUDA out of memory\")",
        "methods": [],
        "bases": [
          "AppError"
        ]
      },
      {
        "name": "SearchError",
        "line": 53,
        "docstring": "\uac80\uc0c9 \uad00\ub828 \uc608\uc678\n\nExample:\n    raise SearchError(\"\uc778\ub371\uc2a4 \ub85c\ub4dc \uc2e4\ud328\", details=\"index file not found\")",
        "methods": [],
        "bases": [
          "AppError"
        ]
      },
      {
        "name": "ValidationError",
        "line": 62,
        "docstring": "\uc785\ub825 \uac80\uc99d \uc2e4\ud328\n\nExample:\n    raise ValidationError(\"\ube48 \uc9c8\ubb38\", details=\"query cannot be empty\")",
        "methods": [],
        "bases": [
          "AppError"
        ]
      },
      {
        "name": "ErrorCode",
        "line": 75,
        "docstring": "RAG \ud30c\uc774\ud504\ub77c\uc778 \uc5d0\ub7ec \ucf54\ub4dc\n\nUI\uc5d0\uc11c \uc5d0\ub7ec \ucf54\ub4dc \uae30\ubc18 \uba54\uc2dc\uc9c0 \ub9e4\ud551\uc5d0 \uc0ac\uc6a9.",
        "methods": [],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\uc560\ud50c\ub9ac\ucf00\uc774\uc158 \uc608\uc678 \uc815\uc758\n\n\uacc4\uce35\uc801 \uc608\uc678 \uad6c\uc870:\n- AppError (\uae30\ubcf8)\n  - ConfigError (\uc124\uc815)\n  - DatabaseError (\ub370\uc774\ud130\ubca0\uc774\uc2a4)\n  - ModelError (AI \ubaa8\ub378)\n  - SearchError (\uac80\uc0c9)"
  },
  "app.core.__init__": {
    "path": "app/core/__init__.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/core/__init__.py",
    "lines_of_code": 31,
    "imports": [
      "app.core.logging",
      "app.core.logging.get_logger",
      "app.core.errors",
      "app.core.errors.AppError",
      "app.core.errors.ConfigError",
      "app.core.errors.DatabaseError",
      "app.core.errors.ModelError",
      "app.core.errors.SearchError",
      "app.core.errors.ValidationError",
      "app.core.errors.ErrorCode",
      "app.core.errors.ERROR_MESSAGES"
    ],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": "Core Application Infrastructure\n\n\ud575\uc2ec \uc778\ud504\ub77c \ubaa8\ub4c8:\n- config: \uc124\uc815 \uad00\ub9ac\n- logging: \ub85c\uae45 \uc2dc\uc2a4\ud15c\n- errors: \uc608\uc678 \uc815\uc758"
  },
  "app.config.settings": {
    "path": "app/config/settings.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/config/settings.py",
    "lines_of_code": 55,
    "imports": [
      "pathlib",
      "pathlib.Path",
      "os",
      "dotenv",
      "dotenv.load_dotenv"
    ],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": "\ud504\ub85c\uc81d\ud2b8 \ud1b5\ud569 \uc124\uc815 \ubaa8\ub4c8\n\ub124\uc784 \ucda9\ub3cc \ubc29\uc9c0\ub97c \uc704\ud574 \uc808\ub300 \uacbd\ub85c\ub85c \uc784\ud3ec\ud2b8: from app.config.settings import ..."
  },
  "app.config.__init__": {
    "path": "app/config/__init__.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/config/__init__.py",
    "lines_of_code": 1,
    "imports": [],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": null
  },
  "app.api.main": {
    "path": "app/api/main.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/api/main.py",
    "lines_of_code": 367,
    "imports": [
      "sys",
      "os",
      "time",
      "subprocess",
      "base64",
      "json",
      "datetime",
      "datetime.datetime",
      "pathlib",
      "pathlib.Path",
      "urllib.parse",
      "urllib.parse.quote",
      "fastapi",
      "fastapi.FastAPI",
      "fastapi.HTTPException",
      "fastapi.Query",
      "fastapi.Request",
      "fastapi.middleware.cors",
      "fastapi.middleware.cors.CORSMiddleware",
      "fastapi.responses",
      "fastapi.responses.FileResponse",
      "fastapi.responses.StreamingResponse",
      "dotenv",
      "dotenv.load_dotenv",
      "sys",
      "traceback",
      "uvicorn",
      "llama_cpp",
      "llama_cpp",
      "rag_system.qwen_llm",
      "rag_system.qwen_llm.QwenLLM",
      "config",
      "config.QWEN_MODEL_PATH",
      "config",
      "config.QWEN_MODEL_PATH",
      "pathlib",
      "pathlib.Path"
    ],
    "functions": [
      {
        "name": "get_public_base_url",
        "line": 41,
        "docstring": "\ub3d9\uc801\uc73c\ub85c \uacf5\uac1c \uae30\uc900 URL \uc0dd\uc131 (\ud504\ub85d\uc2dc/\ud3ec\uc6cc\ub529 \ud658\uacbd \uc9c0\uc6d0)\n\n\uc6b0\uc120\uc21c\uc704:\n1. \ud658\uacbd\ubcc0\uc218 PUBLIC_API_BASE (\uc218\ub3d9 \uc124\uc815)\n2. X-Forwarded-Host / X-Forwarded-Proto \ud5e4\ub354 (\ud504\ub85d\uc2dc \ud658\uacbd)\n3. request.url (\uae30\ubcf8)\n\nArgs:\n    request: FastAPI Request \uac1d\uccb4\n\nReturns:\n    str: \uacf5\uac1c \uae30\uc900 URL (\uc608: http://192.168.0.10:7860)",
        "args": [
          "request"
        ],
        "is_async": false
      },
      {
        "name": "log_file_access",
        "line": 73,
        "docstring": "\ud30c\uc77c \uc811\uadfc \ub85c\uadf8 \uae30\ub85d\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n    action: \uc561\uc158 \ud0c0\uc785 (preview|download)\n    query: \uac80\uc0c9 \uc9c8\uc758 (\uc120\ud0dd)",
        "args": [
          "filename",
          "action",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "health",
        "line": 100,
        "docstring": "\ud5ec\uc2a4\uccb4\ud06c \uc5d4\ub4dc\ud3ec\uc778\ud2b8\n\nReturns:\n    dict: \uc2dc\uc2a4\ud15c \uc0c1\ud0dc \uc815\ubcf4 (P0-4: LLM \uc0c1\ud0dc \ud3ec\ud568)",
        "args": [],
        "is_async": false
      },
      {
        "name": "preview_file",
        "line": 153,
        "docstring": "\ud30c\uc77c \ubbf8\ub9ac\ubcf4\uae30 (\ubcf4\uc548: docs \ud558\uc704\ub9cc \ud5c8\uc6a9)\n\nArgs:\n    ref: base64\ub85c \uc778\ucf54\ub529\ub41c \ud30c\uc77c \uacbd\ub85c\n\nReturns:\n    \ud30c\uc77c \uc751\ub2f5 (PDF/\uc774\ubbf8\uc9c0 \ub4f1)",
        "args": [
          "ref"
        ],
        "is_async": false
      },
      {
        "name": "download_file",
        "line": 216,
        "docstring": "\ud30c\uc77c \ub2e4\uc6b4\ub85c\ub4dc (\ubcf4\uc548: docs \ud558\uc704\ub9cc \ud5c8\uc6a9)\n\nArgs:\n    ref: base64\ub85c \uc778\ucf54\ub529\ub41c \ud30c\uc77c \uacbd\ub85c\n\nReturns:\n    \ud30c\uc77c \ub2e4\uc6b4\ub85c\ub4dc \uc751\ub2f5",
        "args": [
          "ref"
        ],
        "is_async": false
      },
      {
        "name": "root",
        "line": 279,
        "docstring": "\ub8e8\ud2b8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8",
        "args": [],
        "is_async": false
      },
      {
        "name": "get_api_config",
        "line": 294,
        "docstring": "API \uc124\uc815 \ubc18\ud658 (Streamlit\uc5d0\uc11c \ub3d9\uc801 URL\uc744 \uac00\uc838\uac00\uae30 \uc704\ud568)\n\nReturns:\n    dict: {\n        \"base_url\": \uacf5\uac1c \uae30\uc900 URL,\n        \"preview_endpoint\": \"/files/preview\",\n        \"download_endpoint\": \"/files/download\"\n    }",
        "args": [
          "request"
        ],
        "is_async": false
      },
      {
        "name": "debug_llm",
        "line": 313,
        "docstring": "LLM \ub85c\ub529 \ub514\ubc84\uadf8 \uc5d4\ub4dc\ud3ec\uc778\ud2b8",
        "args": [],
        "is_async": false
      }
    ],
    "classes": [],
    "entry_point": true,
    "docstring": "FastAPI \ubc31\uc5d4\ub4dc \uc11c\ubc84\n\nHealth check \ubc0f \uae30\ud0c0 API \uc5d4\ub4dc\ud3ec\uc778\ud2b8 \uc81c\uacf5"
  },
  "app.api.__init__": {
    "path": "app/api/__init__.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/api/__init__.py",
    "lines_of_code": 1,
    "imports": [],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": "API \ubaa8\ub4c8"
  },
  "app.rag.retrievers.hybrid": {
    "path": "app/rag/retrievers/hybrid.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/retrievers/hybrid.py",
    "lines_of_code": 93,
    "imports": [
      "typing",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "app.core.logging",
      "app.core.logging.get_logger",
      "modules.metadata_db",
      "modules.metadata_db.MetadataDB",
      "app.rag.query_parser",
      "app.rag.query_parser.QueryParser",
      "traceback"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 21,
        "docstring": "\ucd08\uae30\ud654 - MetadataDB \ub85c\ub4dc",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "search",
        "line": 33,
        "docstring": "\uac80\uc0c9 \uc218\ud589\n\nArgs:\n    query: \uac80\uc0c9 \uc9c8\uc758\n    top_k: \uc0c1\uc704 K\uac1c \uacb0\uacfc\n\nReturns:\n    \uc815\uaddc\ud654\ub41c \uac80\uc0c9 \uacb0\uacfc \ub9ac\uc2a4\ud2b8:\n    [\n        {\n            \"doc_id\": str,\n            \"page\": int,\n            \"score\": float,\n            \"snippet\": str,\n            \"meta\": dict\n        }, ...\n    ]",
        "args": [
          "self",
          "query",
          "top_k"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "HybridRetriever",
        "line": 14,
        "docstring": "\ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9 \uc5d4\uc9c4 (MetadataDB \uae30\ubc18)\n\nRAGPipeline\uc758 Retriever \ud504\ub85c\ud1a0\ucf5c\uc744 \uad6c\ud604\ud558\uba70,\n\ub0b4\ubd80\uc801\uc73c\ub85c MetadataDB\ub97c \uc0ac\uc6a9\ud574 \uac80\uc0c9\ud569\ub2c8\ub2e4.",
        "methods": [
          "__init__",
          "search"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9 \uc5d4\uc9c4 (MetadataDB \uae30\ubc18 \uc784\uc2dc \uad6c\ud604)\n\nQuickFixRAG\uac00 \uc81c\uac70\ub418\uc5b4 MetadataDB\ub97c \uc0ac\uc6a9\ud55c \uac04\ub2e8\ud55c \uac80\uc0c9\uc73c\ub85c \ub300\uccb4"
  },
  "app.rag.retrievers.__init__": {
    "path": "app/rag/retrievers/__init__.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/retrievers/__init__.py",
    "lines_of_code": 15,
    "imports": [
      "app.rag.retrievers.hybrid",
      "app.rag.retrievers.hybrid.HybridRetriever"
    ],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": "\uac80\uc0c9 \uc5d4\uc9c4 \ubaa8\ub4c8\n\n\uad6c\ud604\uccb4:\n- hybrid: \ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9 (BM25 + Dense) - QuickFixRAG \ub798\ud37c\n- bm25: BM25 \uac80\uc0c9 (TODO)\n- dense: Dense \uac80\uc0c9 (TODO)"
  },
  "app.rag.preprocess.clean_text": {
    "path": "app/rag/preprocess/clean_text.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/preprocess/clean_text.py",
    "lines_of_code": 280,
    "imports": [
      "re",
      "collections",
      "collections.Counter",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "typing.Tuple",
      "yaml",
      "app.core.logging",
      "app.core.logging.get_logger"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 22,
        "docstring": "\ucd08\uae30\ud654\n\nArgs:\n    config_path: \uc124\uc815 \ud30c\uc77c \uacbd\ub85c",
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "_load_config",
        "line": 44,
        "docstring": "\uc124\uc815 \ud30c\uc77c \ub85c\ub4dc\n\nArgs:\n    config_path: \uc124\uc815 \ud30c\uc77c \uacbd\ub85c\n\nReturns:\n    \uc124\uc815 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "_compile_patterns",
        "line": 68,
        "docstring": "\ub178\uc774\uc988 \ud328\ud134 \ucef4\ud30c\uc77c\n\nReturns:\n    (\ucef4\ud30c\uc77c\ub41c \ud328\ud134, \uc124\uba85) \ud29c\ud50c \ub9ac\uc2a4\ud2b8",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "clean",
        "line": 90,
        "docstring": "\ud14d\uc2a4\ud2b8 \ub178\uc774\uc988 \uc81c\uac70\n\nArgs:\n    text: \uc6d0\ubcf8 \ud14d\uc2a4\ud2b8\n\nReturns:\n    (\uc815\ub9ac\ub41c \ud14d\uc2a4\ud2b8, \ub178\uc774\uc988 \uce74\uc6b4\ud2b8 \ub515\uc154\ub108\ub9ac)",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_remove_pattern_noise",
        "line": 127,
        "docstring": "\ud328\ud134 \uae30\ubc18 \ub178\uc774\uc988 \uc81c\uac70\n\nArgs:\n    lines: \uc6d0\ubcf8 \ub77c\uc778 \ub9ac\uc2a4\ud2b8\n\nReturns:\n    (\uc815\ub9ac\ub41c \ub77c\uc778 \ub9ac\uc2a4\ud2b8, \ud328\ud134\ubcc4 \uce74\uc6b4\ud2b8)",
        "args": [
          "self",
          "lines"
        ],
        "is_async": false
      },
      {
        "name": "_remove_repeated_lines",
        "line": 155,
        "docstring": "\ube48\ub3c4 \uae30\ubc18 \ubc18\ubcf5 \ud5e4\ub354/\ud478\ud130 \uc81c\uac70\n\n3\ud68c \uc774\uc0c1 \ubc18\ubcf5\ub418\ub294 \ub77c\uc778\uc740 \ub178\uc774\uc988\ub85c \uac04\uc8fc\ud558\uace0 \uc81c\uac70\n\nArgs:\n    lines: \uc6d0\ubcf8 \ub77c\uc778 \ub9ac\uc2a4\ud2b8\n\nReturns:\n    (\uc815\ub9ac\ub41c \ub77c\uc778 \ub9ac\uc2a4\ud2b8, \uc81c\uac70\ub41c \ub77c\uc778 \uc218)",
        "args": [
          "self",
          "lines"
        ],
        "is_async": false
      },
      {
        "name": "_deduplicate_consecutive_lines",
        "line": 199,
        "docstring": "\uc5f0\uc18d\ub41c \uc911\ubcf5 \ub77c\uc778 \uc81c\uac70\n\n\ub3d9\uc77c\ud55c \ub77c\uc778\uc774 \uc5f0\uc18d\ud574\uc11c \ub098\ud0c0\ub098\uba74 max_duplicate_threshold\uac1c\uae4c\uc9c0\ub9cc \uc720\uc9c0\n\nArgs:\n    lines: \uc6d0\ubcf8 \ub77c\uc778 \ub9ac\uc2a4\ud2b8\n\nReturns:\n    (\uc815\ub9ac\ub41c \ub77c\uc778 \ub9ac\uc2a4\ud2b8, \uc81c\uac70\ub41c \ub77c\uc778 \uc218)",
        "args": [
          "self",
          "lines"
        ],
        "is_async": false
      },
      {
        "name": "_normalize_blank_lines",
        "line": 232,
        "docstring": "\uc5f0\uc18d\ub41c \ube48 \ub77c\uc778\uc744 \ud558\ub098\ub85c \uc815\ub9ac\n\nArgs:\n    lines: \uc6d0\ubcf8 \ub77c\uc778 \ub9ac\uc2a4\ud2b8\n\nReturns:\n    \uc815\ub9ac\ub41c \ub77c\uc778 \ub9ac\uc2a4\ud2b8",
        "args": [
          "self",
          "lines"
        ],
        "is_async": false
      },
      {
        "name": "get_stats",
        "line": 263,
        "docstring": "\ub178\uc774\uc988 \uc81c\uac70 \ud1b5\uacc4 \ubb38\uc790\uc5f4 \uc0dd\uc131\n\nArgs:\n    noise_counts: \ub178\uc774\uc988 \uce74\uc6b4\ud2b8 \ub515\uc154\ub108\ub9ac\n\nReturns:\n    \ud1b5\uacc4 \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "noise_counts"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "TextCleaner",
        "line": 19,
        "docstring": "\ud14d\uc2a4\ud2b8 \ub178\uc774\uc988 \uc81c\uac70 \ud074\ub798\uc2a4",
        "methods": [
          "__init__",
          "_load_config",
          "_compile_patterns",
          "clean",
          "_remove_pattern_noise",
          "_remove_repeated_lines",
          "_deduplicate_consecutive_lines",
          "_normalize_blank_lines",
          "get_stats"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\ud14d\uc2a4\ud2b8 \ub178\uc774\uc988 \uc81c\uac70 \ubaa8\ub4c8\n2025-10-26\n\n\ubb38\uc11c\uc5d0\uc11c \ud504\ub9b0\ud2b8 \ud0c0\uc784\uc2a4\ud0ec\ud504, URL, \ubc18\ubcf5 \ud5e4\ub354/\ud478\ud130 \ub4f1\uc758 \ub178\uc774\uc988\ub97c \uc81c\uac70\ud569\ub2c8\ub2e4."
  },
  "app.rag.preprocess.__init__": {
    "path": "app/rag/preprocess/__init__.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/preprocess/__init__.py",
    "lines_of_code": 5,
    "imports": [
      "app.rag.preprocess.clean_text",
      "app.rag.preprocess.clean_text.TextCleaner"
    ],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": "RAG \uc804\ucc98\ub9ac \ubaa8\ub4c8"
  },
  "app.rag.render.list_postprocess": {
    "path": "app/rag/render/list_postprocess.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/render/list_postprocess.py",
    "lines_of_code": 133,
    "imports": [
      "re",
      "collections",
      "collections.defaultdict",
      "datetime",
      "datetime.datetime",
      "typing",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "typing.Tuple",
      "app.rag.preprocess.clean_text",
      "app.rag.preprocess.clean_text.TextCleaner",
      "unicodedata"
    ],
    "functions": [
      {
        "name": "_normalize_fname",
        "line": 35,
        "docstring": "\ud30c\uc77c\uba85 \uc815\uaddc\ud654 (\uc911\ubcf5 \uac80\ucd9c\uc6a9)",
        "args": [
          "name"
        ],
        "is_async": false
      },
      {
        "name": "_parse_date",
        "line": 48,
        "docstring": "\ub0a0\uc9dc \ubb38\uc790\uc5f4\uc744 \ud0c0\uc784\uc2a4\ud0ec\ud504\ub85c \ubcc0\ud658 (\uc815\ub82c\uc6a9)",
        "args": [
          "s"
        ],
        "is_async": false
      },
      {
        "name": "_clean_snippet",
        "line": 56,
        "docstring": "\uc2a4\ub2c8\ud3ab \ud14d\uc2a4\ud2b8 \ud074\ub9ac\ub2dd",
        "args": [
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_fallback_snippet",
        "line": 67,
        "docstring": "\ube48 \uc2a4\ub2c8\ud3ab \uc2dc \uba54\ud0c0\ub370\uc774\ud130 \uae30\ubc18 \ud3f4\ubc31",
        "args": [
          "item"
        ],
        "is_async": false
      },
      {
        "name": "_primary_snippet",
        "line": 84,
        "docstring": "\uc8fc \uc2a4\ub2c8\ud3ab \uc0dd\uc131 (\ud074\ub9b0 + \ud3f4\ubc31)",
        "args": [
          "item"
        ],
        "is_async": false
      },
      {
        "name": "dedup_and_clean",
        "line": 96,
        "docstring": "\ub3d9\uc77c \ubb38\uc11c \uc911\ubcf5 \uc81c\uac70 + \uc2a4\ub2c8\ud3ab \ud074\ub9b0/\ud3f4\ubc31 \uc801\uc6a9\n\nArgs:\n    items: \uac80\uc0c9 \uacb0\uacfc \ub9ac\uc2a4\ud2b8 (\uac01 \ud56d\ubaa9\uc740 filename, date, drafter, category, content/text_preview, score \ud3ec\ud568)\n\nReturns:\n    \uc911\ubcf5 \uc81c\uac70 \ubc0f \ud074\ub9b0\ub41c \uacb0\uacfc \ub9ac\uc2a4\ud2b8 (\uac01 \ud56d\ubaa9\uc5d0 snippet \ud0a4 \ucd94\uac00)",
        "args": [
          "items"
        ],
        "is_async": false
      },
      {
        "name": "clean_text",
        "line": 19,
        "docstring": null,
        "args": [
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_sort_key",
        "line": 127,
        "docstring": null,
        "args": [
          "it"
        ],
        "is_async": false
      },
      {
        "name": "clean_text",
        "line": 25,
        "docstring": null,
        "args": [
          "t"
        ],
        "is_async": false
      },
      {
        "name": "_score",
        "line": 115,
        "docstring": null,
        "args": [
          "it"
        ],
        "is_async": false
      }
    ],
    "classes": [],
    "entry_point": false,
    "docstring": "\uac80\uc0c9 \uacb0\uacfc \ubaa9\ub85d \ud6c4\ucc98\ub9ac \ubaa8\ub4c8\n- \ud14d\uc2a4\ud2b8 \ub178\uc774\uc988 \uc81c\uac70 (\ud0c0\uc784\uc2a4\ud0ec\ud504, URL, \ud398\uc774\uc9c0 \ubc88\ud638)\n- \uc911\ubcf5 \ubb38\uc11c \uc81c\uac70 (\uc815\uaddc\ud654\ub41c \ud30c\uc77c\uba85 \uae30\uc900)\n- \ube48 \uc2a4\ub2c8\ud3ab \ud3f4\ubc31 (\uba54\ud0c0\ub370\uc774\ud130 \uae30\ubc18)"
  },
  "app.rag.render.summary_templates": {
    "path": "app/rag/render/summary_templates.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/render/summary_templates.py",
    "lines_of_code": 396,
    "imports": [
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "yaml",
      "app.core.logging",
      "app.core.logging.get_logger"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 26,
        "docstring": "\ucd08\uae30\ud654\n\nArgs:\n    config_path: \uc124\uc815 \ud30c\uc77c \uacbd\ub85c",
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "_load_config",
        "line": 39,
        "docstring": "\uc124\uc815 \ud30c\uc77c \ub85c\ub4dc\n\nArgs:\n    config_path: \uc124\uc815 \ud30c\uc77c \uacbd\ub85c\n\nReturns:\n    \uc124\uc815 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "render",
        "line": 63,
        "docstring": "doctype\ubcc4 \uc694\uc57d \ub80c\ub354\ub9c1\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n    meta: \uba54\ud0c0\ub370\uc774\ud130 (parse_meta.py\uc758 \uacb0\uacfc)\n    summary: \ud575\uc2ec \uc694\uc57d \ud14d\uc2a4\ud2b8\n    cost_data: \ube44\uc6a9 \ub370\uc774\ud130 (parse_tables.py\uc758 \uacb0\uacfc, \uc120\ud0dd)\n    risk: \ub9ac\uc2a4\ud06c \ud14d\uc2a4\ud2b8 (\uc120\ud0dd)\n    doctype: \ubb38\uc11c \uc720\ud615 (proposal/report/review/minutes/unknown)\n    extra_sections: \ucd94\uac00 \uc139\uc158 \ub370\uc774\ud130\n\nReturns:\n    Markdown \ud615\uc2dd\uc758 \uc694\uc57d \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "filename",
          "meta",
          "summary",
          "cost_data",
          "risk",
          "doctype",
          "extra_sections"
        ],
        "is_async": false
      },
      {
        "name": "_render_proposal",
        "line": 104,
        "docstring": "\uae30\uc548\uc11c \ud15c\ud50c\ub9bf (\uae30\uc874 4\uc139\uc158)\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n    meta: \uba54\ud0c0\ub370\uc774\ud130\n    summary: \ud575\uc2ec \uc694\uc57d\n    cost_data: \ube44\uc6a9 \ub370\uc774\ud130\n    risk: \ub9ac\uc2a4\ud06c\n\nReturns:\n    \ub80c\ub354\ub9c1\ub41c \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "filename",
          "meta",
          "summary",
          "cost_data",
          "risk"
        ],
        "is_async": false
      },
      {
        "name": "_render_report",
        "line": 149,
        "docstring": "\ubcf4\uace0\uc11c \ud15c\ud50c\ub9bf\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n    meta: \uba54\ud0c0\ub370\uc774\ud130\n    summary: \ud575\uc2ec \ubc1c\uacac\uc0ac\ud56d\n    extra: \ucd94\uac00 \uc139\uc158 (conclusion, follow_up)\n\nReturns:\n    \ub80c\ub354\ub9c1\ub41c \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "filename",
          "meta",
          "summary",
          "extra"
        ],
        "is_async": false
      },
      {
        "name": "_render_review",
        "line": 193,
        "docstring": "\uac80\ud1a0\uc11c \ud15c\ud50c\ub9bf\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n    meta: \uba54\ud0c0\ub370\uc774\ud130\n    summary: \uc694\uccad\uc0ac\ud56d\n    extra: \ucd94\uac00 \uc139\uc158 (evaluation, recommendation)\n\nReturns:\n    \ub80c\ub354\ub9c1\ub41c \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "filename",
          "meta",
          "summary",
          "extra"
        ],
        "is_async": false
      },
      {
        "name": "_render_minutes",
        "line": 237,
        "docstring": "\ud68c\uc758\ub85d \ud15c\ud50c\ub9bf\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n    meta: \uba54\ud0c0\ub370\uc774\ud130\n    summary: \ud68c\uc758 \uac1c\uc694\n    extra: \ucd94\uac00 \uc139\uc158 (decisions, action_items)\n\nReturns:\n    \ub80c\ub354\ub9c1\ub41c \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "filename",
          "meta",
          "summary",
          "extra"
        ],
        "is_async": false
      },
      {
        "name": "_render_meta_section",
        "line": 281,
        "docstring": "\uba54\ud0c0\ub370\uc774\ud130 \uc139\uc158 \ub80c\ub354\ub9c1\n\nArgs:\n    meta: \uba54\ud0c0\ub370\uc774\ud130\n\nReturns:\n    \ub80c\ub354\ub9c1\ub41c \uc139\uc158 \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "meta"
        ],
        "is_async": false
      },
      {
        "name": "_render_summary_section",
        "line": 318,
        "docstring": "\ud575\uc2ec \uc694\uc57d \uc139\uc158 \ub80c\ub354\ub9c1\n\nArgs:\n    summary: \uc694\uc57d \ud14d\uc2a4\ud2b8\n\nReturns:\n    \ub80c\ub354\ub9c1\ub41c \uc139\uc158 \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "summary"
        ],
        "is_async": false
      },
      {
        "name": "_render_cost_section",
        "line": 333,
        "docstring": "\ube44\uc6a9 \uc139\uc158 \ub80c\ub354\ub9c1\n\nArgs:\n    cost_data: \ube44\uc6a9 \ub370\uc774\ud130\n\nReturns:\n    \ub80c\ub354\ub9c1\ub41c \uc139\uc158 \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "cost_data"
        ],
        "is_async": false
      },
      {
        "name": "_render_risk_section",
        "line": 370,
        "docstring": "\ub9ac\uc2a4\ud06c \uc139\uc158 \ub80c\ub354\ub9c1\n\nArgs:\n    risk: \ub9ac\uc2a4\ud06c \ud14d\uc2a4\ud2b8\n\nReturns:\n    \ub80c\ub354\ub9c1\ub41c \uc139\uc158 \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "risk"
        ],
        "is_async": false
      },
      {
        "name": "render_simple",
        "line": 385,
        "docstring": "\uac04\ub2e8\ud55c \uc694\uc57d \ub80c\ub354\ub9c1 (\ube44\uc6a9, \ub9ac\uc2a4\ud06c \uc5c6\uc74c)\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n    meta: \uba54\ud0c0\ub370\uc774\ud130\n    summary: \uc694\uc57d \ud14d\uc2a4\ud2b8\n\nReturns:\n    Markdown \ud615\uc2dd\uc758 \uc694\uc57d \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "filename",
          "meta",
          "summary"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "SummaryRenderer",
        "line": 23,
        "docstring": "\uc694\uc57d \ud15c\ud50c\ub9bf \ub80c\ub354\ub7ec",
        "methods": [
          "__init__",
          "_load_config",
          "render",
          "_render_proposal",
          "_render_report",
          "_render_review",
          "_render_minutes",
          "_render_meta_section",
          "_render_summary_section",
          "_render_cost_section",
          "_render_risk_section",
          "render_simple"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\uc694\uc57d \ud15c\ud50c\ub9bf \ub80c\ub354\ub9c1 \ubaa8\ub4c8\n2025-10-26\n\n\ubb38\uc11c \uc694\uc57d\uc744 \uace0\uc815\ub41c 4\uc139\uc158 \uad6c\uc870\ub85c \ub80c\ub354\ub9c1\ud569\ub2c8\ub2e4.\n\n\uad6c\uc870:\n1. \ud575\uc2ec \uc694\uc57d: \uc7a5\uc560 \uc694\uc9c0, \uc870\uce58, \ub9ac\uc2a4\ud06c\n2. \ube44\uc6a9 (VAT \ubcc4\ub3c4): \ud56d\ubaa9\ubcc4 \ube44\uc6a9 \ubc0f \ud569\uacc4\n3. \uba54\ud0c0: \uae30\uc548\uc790, \ubd80\uc11c, \ubb38\uc11c\ubc88\ud638, \ubcf4\uc874\uae30\uac04, \uae30\uc548/\uc2dc\ud589\uc77c\uc790\n4. (\ub178\uc774\uc988 \uc81c\uac70 \uc644\ub8cc)"
  },
  "app.rag.render.__init__": {
    "path": "app/rag/render/__init__.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/render/__init__.py",
    "lines_of_code": 5,
    "imports": [
      "app.rag.render.summary_templates",
      "app.rag.render.summary_templates.SummaryRenderer"
    ],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": "RAG \ub80c\ub354\ub9c1 \ubaa8\ub4c8"
  },
  "app.rag.parse.parse_meta": {
    "path": "app/rag/parse/parse_meta.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/parse/parse_meta.py",
    "lines_of_code": 361,
    "imports": [
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict",
      "typing.Any",
      "typing.Tuple",
      "yaml",
      "app.core.logging",
      "app.core.logging.get_logger",
      "re",
      "re",
      "datetime",
      "datetime.datetime"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 24,
        "docstring": "\ucd08\uae30\ud654\n\nArgs:\n    config_path: \uc124\uc815 \ud30c\uc77c \uacbd\ub85c",
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "_validate_author",
        "line": 66,
        "docstring": "\uc791\uc131\uc790 \uc774\ub984 \uac80\uc99d (\ud55c\uae00 2~4\uc74c\uc808 + Stoplist)\n\nArgs:\n    author: \uc791\uc131\uc790 \ud6c4\ubcf4 \ubb38\uc790\uc5f4\n\nReturns:\n    \uac80\uc99d \ud1b5\uacfc \uc5ec\ubd80",
        "args": [
          "self",
          "author"
        ],
        "is_async": false
      },
      {
        "name": "_load_config",
        "line": 95,
        "docstring": "\uc124\uc815 \ud30c\uc77c \ub85c\ub4dc\n\nArgs:\n    config_path: \uc124\uc815 \ud30c\uc77c \uacbd\ub85c\n\nReturns:\n    \uc124\uc815 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "parse_dates",
        "line": 119,
        "docstring": "\ub0a0\uc9dc \ud30c\uc2f1 \ubc0f \ud45c\uc900\ud654\n\nArgs:\n    metadata: \ubb38\uc11c \uba54\ud0c0\ub370\uc774\ud130 (\uae30\uc548\uc77c\uc790, \uc2dc\ud589\uc77c\uc790, \uc791\uc131\uc77c\uc790 \ub4f1 \ud3ec\ud568)\n\nReturns:\n    (display_date, date_detail)\n    - display_date: \uc6b0\uc120\uc21c\uc704\uc5d0 \ub530\ub978 \ub300\ud45c \ub0a0\uc9dc (YYYY-MM-DD)\n    - date_detail: \"\uae30\uc548\uc77c\uc790 / \uc2dc\ud589\uc77c\uc790\" \ud615\uc2dd",
        "args": [
          "self",
          "metadata"
        ],
        "is_async": false
      },
      {
        "name": "_normalize_date",
        "line": 162,
        "docstring": "\ub0a0\uc9dc \ubb38\uc790\uc5f4 \uc815\uaddc\ud654 (YYYY-MM-DD \ud615\uc2dd)\n\nArgs:\n    date_str: \uc6d0\ubcf8 \ub0a0\uc9dc \ubb38\uc790\uc5f4\n\nReturns:\n    \uc815\uaddc\ud654\ub41c \ub0a0\uc9dc (YYYY-MM-DD) \ub610\ub294 \uc6d0\ubcf8",
        "args": [
          "self",
          "date_str"
        ],
        "is_async": false
      },
      {
        "name": "classify_category",
        "line": 218,
        "docstring": "\uce74\ud14c\uace0\ub9ac \ubd84\ub958\n\nArgs:\n    title: \ubb38\uc11c \uc81c\ubaa9\n    content: \ubb38\uc11c \ub0b4\uc6a9\n    filename: \ud30c\uc77c\uba85\n\nReturns:\n    (category, source)\n    - category: \ubd84\ub958\ub41c \uce74\ud14c\uace0\ub9ac\n    - source: \ubd84\ub958 \ubc29\ubc95 (\"rule\", \"ml\", \"default\")",
        "args": [
          "self",
          "title",
          "content",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "parse",
        "line": 272,
        "docstring": "\uba54\ud0c0\ub370\uc774\ud130 \ud30c\uc2f1 \ubc0f \ud45c\uc900\ud654\n\nArgs:\n    metadata: \uc6d0\ubcf8 \uba54\ud0c0\ub370\uc774\ud130\n    title: \ubb38\uc11c \uc81c\ubaa9\n    content: \ubb38\uc11c \ub0b4\uc6a9\n\nReturns:\n    \ud45c\uc900\ud654\ub41c \uba54\ud0c0\ub370\uc774\ud130",
        "args": [
          "self",
          "metadata",
          "title",
          "content"
        ],
        "is_async": false
      },
      {
        "name": "format_meta_display",
        "line": 338,
        "docstring": "\uba54\ud0c0\ub370\uc774\ud130 \ud45c\uc2dc \ud615\uc2dd \uc0dd\uc131\n\nArgs:\n    parsed_meta: \ud30c\uc2f1\ub41c \uba54\ud0c0\ub370\uc774\ud130\n\nReturns:\n    Markdown \ud615\uc2dd\uc758 \uba54\ud0c0\ub370\uc774\ud130 \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "parsed_meta"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "MetaParser",
        "line": 21,
        "docstring": "\uba54\ud0c0\ub370\uc774\ud130 \ud30c\uc11c",
        "methods": [
          "__init__",
          "_validate_author",
          "_load_config",
          "parse_dates",
          "_normalize_date",
          "classify_category",
          "parse",
          "format_meta_display"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\uba54\ud0c0\ub370\uc774\ud130 \ud30c\uc2f1 \ubaa8\ub4c8\n2025-10-26\n\n\ubb38\uc11c \ub0a0\uc9dc\uc640 \uce74\ud14c\uace0\ub9ac\ub97c \ud45c\uc900\ud654\ud569\ub2c8\ub2e4.\n\n\uaddc\uce59:\n- \ub0a0\uc9dc: \uae30\uc548\uc77c\uc790 \uc6b0\uc120, \uc2dc\ud589\uc77c\uc790 \ud3f4\ubc31, \ub458 \ub2e4 \ud45c\uc2dc\n- \uce74\ud14c\uace0\ub9ac: \uaddc\uce59 \uae30\ubc18 \ubd84\ub958, \"\uc815\ubcf4 \uc5c6\uc74c\" \ub300\uc2e0 \"\ubbf8\ubd84\ub958\" \uc0ac\uc6a9"
  },
  "app.rag.parse.doctype": {
    "path": "app/rag/parse/doctype.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/parse/doctype.py",
    "lines_of_code": 206,
    "imports": [
      "re",
      "typing",
      "typing.Dict",
      "typing.Any",
      "yaml",
      "pathlib",
      "pathlib.Path"
    ],
    "functions": [
      {
        "name": "get_classifier",
        "line": 195,
        "docstring": "\ubd84\ub958\uae30 \uc2f1\uae00\ud1a4 \ubc18\ud658",
        "args": [],
        "is_async": false
      },
      {
        "name": "classify_document",
        "line": 203,
        "docstring": "\ubb38\uc11c \uc720\ud615 \ubd84\ub958 (\ud3b8\uc758 \ud568\uc218)",
        "args": [
          "text",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 17,
        "docstring": null,
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "_load_config",
        "line": 22,
        "docstring": "\uc124\uc815 \ud30c\uc77c \ub85c\ub4dc",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_get_default_config",
        "line": 35,
        "docstring": "\uae30\ubcf8 \uc124\uc815 \ubc18\ud658",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "classify",
        "line": 93,
        "docstring": "\ubb38\uc11c \uc720\ud615 \ubd84\ub958\n\nArgs:\n    text: \ubb38\uc11c \ud14d\uc2a4\ud2b8 (\uc804\uccb4 \ub610\ub294 \uc55e\ubd80\ubd84 \uc0d8\ud50c)\n    filename: \ud30c\uc77c\uba85 (\ucd94\uac00 \ud78c\ud2b8\uc6a9)\n\nReturns:\n    {\n        \"doctype\": \"proposal\"|\"report\"|\"review\"|\"minutes\"|\"unknown\",\n        \"confidence\": 0.0~1.0,\n        \"reasons\": [\"\ub9e4\uce6d\ub41c \ud0a4\uc6cc\ub4dc\ub4e4\"]\n    }",
        "args": [
          "self",
          "text",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "_normalize_text",
        "line": 163,
        "docstring": "\ud14d\uc2a4\ud2b8 \uc815\uaddc\ud654 (\uacf5\ubc31, \ub300\uc18c\ubb38\uc790 \ub4f1)",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "get_doctype_name_korean",
        "line": 179,
        "docstring": "doctype \ucf54\ub4dc \u2192 \ud55c\uae00 \uc774\ub984",
        "args": [
          "self",
          "doctype"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "DocumentTypeClassifier",
        "line": 14,
        "docstring": "\ubb38\uc11c \uc720\ud615 \ubd84\ub958\uae30",
        "methods": [
          "__init__",
          "_load_config",
          "_get_default_config",
          "classify",
          "_normalize_text",
          "get_doctype_name_korean"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\ubb38\uc11c \uc720\ud615(doctype) \ubd84\ub958\uae30\n- \ub8f0 \uae30\ubc18 \ubd84\ub958 (\ud0a4\uc6cc\ub4dc \ub9e4\uce6d)\n- \ub2e4\uc911 \ub9e4\uce6d \uc2dc \uc6b0\uc120\uc21c\uc704 \uc801\uc6a9\n- config/document_processing.yaml \uc124\uc815 \uae30\ubc18"
  },
  "app.rag.parse.parse_tables": {
    "path": "app/rag/parse/parse_tables.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/parse/parse_tables.py",
    "lines_of_code": 323,
    "imports": [
      "re",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict",
      "typing.Any",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "yaml",
      "app.core.logging",
      "app.core.logging.get_logger"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 26,
        "docstring": "\ucd08\uae30\ud654\n\nArgs:\n    config_path: \uc124\uc815 \ud30c\uc77c \uacbd\ub85c",
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "_load_config",
        "line": 49,
        "docstring": "\uc124\uc815 \ud30c\uc77c \ub85c\ub4dc\n\nArgs:\n    config_path: \uc124\uc815 \ud30c\uc77c \uacbd\ub85c\n\nReturns:\n    \uc124\uc815 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "config_path"
        ],
        "is_async": false
      },
      {
        "name": "normalize_number",
        "line": 73,
        "docstring": "\uc22b\uc790 \uc815\uaddc\ud654\n\nArgs:\n    text: \uc22b\uc790\uac00 \ud3ec\ud568\ub41c \ubb38\uc790\uc5f4 (\uc608: \"1,234,567\uc6d0\")\n\nReturns:\n    \uc815\uaddc\ud654\ub41c \uc815\uc218 (\uc2e4\ud328\uc2dc None)",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "detect_table_headers",
        "line": 99,
        "docstring": "\ud45c \ud5e4\ub354 \uac10\uc9c0\n\nArgs:\n    text: \ubb38\uc11c \ud14d\uc2a4\ud2b8\n\nReturns:\n    \ubc1c\uacac\ub41c \ud5e4\ub354 \ub9ac\uc2a4\ud2b8",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "extract_cost_table",
        "line": 119,
        "docstring": "\ube44\uc6a9 \ud45c \ucd94\ucd9c\n\nArgs:\n    text: \ubb38\uc11c \ud14d\uc2a4\ud2b8\n\nReturns:\n    (items, parse_success, status_message)\n    - items: \ud56d\ubaa9 \ub9ac\uc2a4\ud2b8 [{\"name\": ..., \"quantity\": ..., \"unit_price\": ..., \"amount\": ...}, ...]\n    - parse_success: \ud30c\uc2f1 \uc131\uacf5 \uc5ec\ubd80\n    - status_message: \uc0c1\ud0dc \uba54\uc2dc\uc9c0",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "validate_sum",
        "line": 161,
        "docstring": "\ud569\uacc4 \uac80\uc99d\n\nArgs:\n    items: \ud56d\ubaa9 \ub9ac\uc2a4\ud2b8\n    claimed_total: \ubb38\uc11c\uc5d0 \uba85\uc2dc\ub41c \ud569\uacc4 (\uc120\ud0dd)\n\nReturns:\n    (match, calculated_total, claimed_total)\n    - match: \ud569\uacc4 \uc77c\uce58 \uc5ec\ubd80\n    - calculated_total: \uacc4\uc0b0\ub41c \ud569\uacc4\n    - claimed_total: \ubb38\uc11c \ud569\uacc4",
        "args": [
          "self",
          "items",
          "claimed_total"
        ],
        "is_async": false
      },
      {
        "name": "parse",
        "line": 196,
        "docstring": "\ud45c \ud30c\uc2f1 (\uc804\uccb4 \ud504\ub85c\uc138\uc2a4)\n\nArgs:\n    text: \ubb38\uc11c \ud14d\uc2a4\ud2b8\n\nReturns:\n    \ud30c\uc2f1 \uacb0\uacfc \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_claimed_total",
        "line": 261,
        "docstring": "\ubb38\uc11c\uc5d0\uc11c \ud569\uacc4 \ucd94\ucd9c\n\nArgs:\n    text: \ubb38\uc11c \ud14d\uc2a4\ud2b8\n\nReturns:\n    \ucd94\ucd9c\ub41c \ud569\uacc4 (\uc5c6\uc73c\uba74 None)",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "format_cost_display",
        "line": 288,
        "docstring": "\ube44\uc6a9 \ud45c \ud45c\uc2dc \ud615\uc2dd \uc0dd\uc131\n\nArgs:\n    parsed_table: \ud30c\uc2f1\ub41c \ud45c \ub370\uc774\ud130\n\nReturns:\n    Markdown \ud615\uc2dd\uc758 \ube44\uc6a9 \ud45c \ubb38\uc790\uc5f4",
        "args": [
          "self",
          "parsed_table"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "TableParser",
        "line": 23,
        "docstring": "\ud45c \ud30c\uc11c",
        "methods": [
          "__init__",
          "_load_config",
          "normalize_number",
          "detect_table_headers",
          "extract_cost_table",
          "validate_sum",
          "parse",
          "_extract_claimed_total",
          "format_cost_display"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\ud45c(\ube44\uc6a9) \ud30c\uc2f1 \ubaa8\ub4c8\n2025-10-26\n\n\ubb38\uc11c\uc5d0\uc11c \ube44\uc6a9 \ud45c\ub97c \ud30c\uc2f1\ud558\uace0 \ud569\uacc4\ub97c \uac80\uc99d\ud569\ub2c8\ub2e4.\n\n\uae30\ub2a5:\n- \ud5e4\ub354 \uc790\ub3d9 \uc778\uc2dd (\ubaa8\ub378\uba85, \uc218\ub9ac\ub0b4\uc5ed, \uc218\ub7c9, \ub2e8\uac00, \ud569\uacc4 \ub4f1)\n- \uc22b\uc790 \uc815\uaddc\ud654 (\uc27c\ud45c, \uc6d0\ud654 \uae30\ud638, \uacf5\ubc31 \uc81c\uac70)\n- \ud569\uacc4 \uad50\ucc28 \uac80\uc99d (\u00b11\uc6d0 \uc624\ucc28 \ud5c8\uc6a9)"
  },
  "app.rag.parse.__init__": {
    "path": "app/rag/parse/__init__.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/parse/__init__.py",
    "lines_of_code": 6,
    "imports": [
      "app.rag.parse.parse_meta",
      "app.rag.parse.parse_meta.MetaParser",
      "app.rag.parse.parse_tables",
      "app.rag.parse.parse_tables.TableParser"
    ],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": "RAG \ud30c\uc2f1 \ubaa8\ub4c8"
  },
  "app.rag.utils.context_hydrator": {
    "path": "app/rag/utils/context_hydrator.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/utils/context_hydrator.py",
    "lines_of_code": 157,
    "imports": [
      "typing",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "typing.Tuple",
      "pathlib",
      "pathlib.Path",
      "logging",
      "pdfplumber"
    ],
    "functions": [
      {
        "name": "hydrate_context",
        "line": 13,
        "docstring": "\uccad\ud06c\uc5d0\uc11c \ud14d\uc2a4\ud2b8\ub97c \ucd94\ucd9c\ud558\uace0 \ubd80\uc871\ud558\uba74 PDF \ubcf4\uac15\n\nArgs:\n    chunks: \uac80\uc0c9 \uacb0\uacfc \uccad\ud06c \ub9ac\uc2a4\ud2b8\n    max_len: \ucd5c\ub300 \ucee8\ud14d\uc2a4\ud2b8 \uae38\uc774\n\nReturns:\n    (context_text, metrics)",
        "args": [
          "chunks",
          "max_len"
        ],
        "is_async": false
      },
      {
        "name": "_extract_text_from_chunk",
        "line": 75,
        "docstring": "\uccad\ud06c\uc5d0\uc11c \ud14d\uc2a4\ud2b8 \ucd94\ucd9c (\ud3f4\ubc31 \uccb4\uc778)\n\n\ud3f4\ubc31 \uc21c\uc11c: text \u2192 content \u2192 snippet \u2192 text_preview \u2192 \"\"",
        "args": [
          "chunk",
          "metrics"
        ],
        "is_async": false
      },
      {
        "name": "_extract_pdf_tail",
        "line": 95,
        "docstring": "PDF \ub9c8\uc9c0\ub9c9 2\ud398\uc774\uc9c0 \ucd94\ucd9c (\uacb0\ub860/\uc694\uc57d \uac00\ub2a5\uc131 \ub192\uc74c)\n\nArgs:\n    chunk: \uccab \ubc88\uc9f8 \uccad\ud06c (\ud30c\uc77c \uacbd\ub85c \ud3ec\ud568)\n    metrics: \uba54\ud2b8\ub9ad \ub515\uc154\ub108\ub9ac\n    needed: \ud544\uc694\ud55c \ud14d\uc2a4\ud2b8 \uae38\uc774\n\nReturns:\n    \ucd94\ucd9c\ub41c \ud14d\uc2a4\ud2b8",
        "args": [
          "chunk",
          "metrics",
          "needed"
        ],
        "is_async": false
      }
    ],
    "classes": [],
    "entry_point": false,
    "docstring": "Context Hydrator - \uccad\ud06c\uc5d0\uc11c \ud14d\uc2a4\ud2b8 \ucd94\ucd9c \ubc0f PDF \ubcf4\uac15"
  },
  "app.rag.utils.json_utils": {
    "path": "app/rag/utils/json_utils.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/utils/json_utils.py",
    "lines_of_code": 206,
    "imports": [
      "json",
      "re",
      "typing",
      "typing.Optional",
      "typing.Dict",
      "typing.Any",
      "logging",
      "re"
    ],
    "functions": [
      {
        "name": "extract_last_json_block",
        "line": 10,
        "docstring": "\ub9c8\uc9c0\ub9c9 \uade0\ud615 \uc7a1\ud78c {...} \ube14\ub85d\ub9cc \ucd94\ucd9c \ud6c4 \ud30c\uc2f1\n\nArgs:\n    s: JSON\uc774 \ud3ec\ud568\ub41c \ubb38\uc790\uc5f4\n\nReturns:\n    \ud30c\uc2f1\ub41c JSON \ub515\uc154\ub108\ub9ac\n\nRaises:\n    ValueError: JSON \uac1d\uccb4\ub97c \ucc3e\uc744 \uc218 \uc5c6\uac70\ub098 \ud30c\uc2f1 \uc2e4\ud328",
        "args": [
          "s"
        ],
        "is_async": false
      },
      {
        "name": "parse_summary_json_robust",
        "line": 47,
        "docstring": "LLM \uc751\ub2f5\uc5d0\uc11c JSON \ucd94\ucd9c \ubc0f \ud30c\uc2f1 (\uac15\uac74\ud55c \ubc84\uc804)\n\n\uc5ec\ub7ec \uc804\ub7b5\uc744 \uc21c\ucc28\uc801\uc73c\ub85c \uc2dc\ub3c4:\n1. \uc815\uaddc\uc2dd\uc73c\ub85c \ucf54\ub4dc \ube14\ub85d \uc81c\uac70 \ud6c4 \ud30c\uc2f1\n2. extract_last_json_block \uc0ac\uc6a9\n3. \ub05d \ucf64\ub9c8 \uc81c\uac70 \ud6c4 \uc7ac\uc2dc\ub3c4\n\nArgs:\n    response: LLM \uc751\ub2f5 \ud14d\uc2a4\ud2b8\n\nReturns:\n    \ud30c\uc2f1\ub41c JSON dict, \uc2e4\ud328 \uc2dc None",
        "args": [
          "response"
        ],
        "is_async": false
      },
      {
        "name": "ensure_citations",
        "line": 104,
        "docstring": "JSON \uc751\ub2f5\uc5d0 citations \ud544\ub4dc \ud655\uc778 \ubc0f \ubcf4\uac15\n\nArgs:\n    json_data: \ud30c\uc2f1\ub41c JSON \ub370\uc774\ud130\n    doc_ref: \ucc38\uc870 \ubb38\uc11c\uba85 (\uc788\uc73c\uba74 \uac15\uc81c \ucd94\uac00)\n\nReturns:\n    citations \ud544\ub4dc\uac00 \ubcf4\uc7a5\ub41c JSON \ub370\uc774\ud130",
        "args": [
          "json_data",
          "doc_ref"
        ],
        "is_async": false
      },
      {
        "name": "extract_amounts_from_text",
        "line": 129,
        "docstring": "\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uae08\uc561 \ucd94\ucd9c (\uc6d0\ubb38\uc5d0\uc11c\ub9cc)\n\nArgs:\n    text: \uc6d0\ubb38 \ud14d\uc2a4\ud2b8\n\nReturns:\n    \ucd94\ucd9c\ub41c \uae08\uc561 \ub9ac\uc2a4\ud2b8 [(\uae08\uc561, \ucee8\ud14d\uc2a4\ud2b8), ...]",
        "args": [
          "text"
        ],
        "is_async": false
      },
      {
        "name": "validate_numeric_fields",
        "line": 181,
        "docstring": "JSON \uc751\ub2f5\uc758 \uc218\uce58 \ud544\ub4dc\ub97c \uc6d0\ubb38\uacfc \ub300\uc870 \uac80\uc99d\n\nArgs:\n    json_data: \ud30c\uc2f1\ub41c JSON \ub370\uc774\ud130\n    source_text: \uc6d0\ubb38 \ud14d\uc2a4\ud2b8\n\nReturns:\n    \uac80\uc99d\ub41c JSON \ub370\uc774\ud130 (\uc6d0\ubb38\uc5d0 \uc5c6\ub294 \uc218\uce58\ub294 \uc81c\uac70)",
        "args": [
          "json_data",
          "source_text"
        ],
        "is_async": false
      }
    ],
    "classes": [],
    "entry_point": false,
    "docstring": "JSON \ud30c\uc2f1 \uc720\ud2f8\ub9ac\ud2f0 (\uac15\uac74\ud55c \ud30c\uc11c)"
  },
  "app.rag.utils.__init__": {
    "path": "app/rag/utils/__init__.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/app/rag/utils/__init__.py",
    "lines_of_code": 1,
    "imports": [],
    "functions": [],
    "classes": [],
    "entry_point": false,
    "docstring": null
  },
  "modules.intent_module": {
    "path": "modules/intent_module.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/intent_module.py",
    "lines_of_code": 337,
    "imports": [
      "re",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Any",
      "llm_module",
      "llm_module.LLMModule"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 28,
        "docstring": "IntentModule \ucd08\uae30\ud654\n\nArgs:\n    llm_module: LLMModule \uc778\uc2a4\ud134\uc2a4 (\uc120\ud0dd\uc801)",
        "args": [
          "self",
          "llm_module"
        ],
        "is_async": false
      },
      {
        "name": "analyze_user_intent",
        "line": 39,
        "docstring": "\uc0ac\uc6a9\uc790 \uc9c8\ubb38 \uc758\ub3c4\ub97c \uc790\uc5f0\uc2a4\ub7fd\uac8c \ubd84\uc11d\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n\nReturns:\n    Dict: \uc758\ub3c4 \ubd84\uc11d \uacb0\uacfc",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "classify_search_intent",
        "line": 96,
        "docstring": "\uac80\uc0c9 \uc758\ub3c4 \ubd84\ub958 - \ud56d\uc0c1 document \ubaa8\ub4dc \ubc18\ud658\n\nArgs:\n    query: \uac80\uc0c9 \ucffc\ub9ac\n\nReturns:\n    str: \uac80\uc0c9 \uc758\ub3c4 ('document' \uace0\uc815)",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "generate_conversational_response",
        "line": 108,
        "docstring": "\uc790\uc5f0\uc2a4\ub7fd\uace0 \ub300\ud654\ud615 \uc751\ub2f5 \uc0dd\uc131\n\nArgs:\n    context: \ubb38\uc11c \ucee8\ud14d\uc2a4\ud2b8\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n    intent: \uc758\ub3c4 \ubd84\uc11d \uacb0\uacfc\n    pdf_info: PDF \uc815\ubcf4 (\uc120\ud0dd\uc801)\n\nReturns:\n    str: \uc0dd\uc131\ub41c \uc751\ub2f5",
        "args": [
          "self",
          "context",
          "query",
          "intent",
          "pdf_info"
        ],
        "is_async": false
      },
      {
        "name": "_generate_llm_response",
        "line": 144,
        "docstring": "LLM\uc744 \uc0ac\uc6a9\ud55c \uc751\ub2f5 \uc0dd\uc131 (LLMModule\uc774 \uc5c6\uc744 \ub54c)\n\nArgs:\n    context: \ubb38\uc11c \ucee8\ud14d\uc2a4\ud2b8\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n    intent: \uc758\ub3c4 \ubd84\uc11d \uacb0\uacfc\n\nReturns:\n    str: \uc0dd\uc131\ub41c \uc751\ub2f5",
        "args": [
          "self",
          "context",
          "query",
          "intent"
        ],
        "is_async": false
      },
      {
        "name": "_create_intent_based_prompt",
        "line": 174,
        "docstring": "\uc758\ub3c4\uc5d0 \ub530\ub978 \ud504\ub86c\ud504\ud2b8 \uc0dd\uc131\n\nArgs:\n    context: \ubb38\uc11c \ucee8\ud14d\uc2a4\ud2b8\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n    intent: \uc758\ub3c4 \ubd84\uc11d \uacb0\uacfc\n\nReturns:\n    str: \uc0dd\uc131\ub41c \ud504\ub86c\ud504\ud2b8",
        "args": [
          "self",
          "context",
          "query",
          "intent"
        ],
        "is_async": false
      },
      {
        "name": "generate_fallback_response",
        "line": 266,
        "docstring": "LLM \uc2e4\ud328 \uc2dc \ud3f4\ubc31 \uc751\ub2f5 \uc0dd\uc131\n\nArgs:\n    context: \ubb38\uc11c \ucee8\ud14d\uc2a4\ud2b8\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n    intent: \uc758\ub3c4 \ubd84\uc11d \uacb0\uacfc\n\nReturns:\n    str: \ud3f4\ubc31 \uc751\ub2f5",
        "args": [
          "self",
          "context",
          "query",
          "intent"
        ],
        "is_async": false
      },
      {
        "name": "extract_key_sentences",
        "line": 306,
        "docstring": "\ud575\uc2ec \ubb38\uc7a5 \ucd94\ucd9c \ud5ec\ud37c\n\nArgs:\n    content: \ubb38\uc11c \ub0b4\uc6a9\n    num_sentences: \ucd94\ucd9c\ud560 \ubb38\uc7a5 \uc218\n\nReturns:\n    List[str]: \ud575\uc2ec \ubb38\uc7a5\ub4e4",
        "args": [
          "self",
          "content",
          "num_sentences"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "IntentModule",
        "line": 25,
        "docstring": "\uc0ac\uc6a9\uc790 \uc758\ub3c4 \ubd84\uc11d \ubc0f \uc751\ub2f5 \uc0dd\uc131\uc744 \ub2f4\ub2f9\ud558\ub294 \ubaa8\ub4c8",
        "methods": [
          "__init__",
          "analyze_user_intent",
          "classify_search_intent",
          "generate_conversational_response",
          "_generate_llm_response",
          "_create_intent_based_prompt",
          "generate_fallback_response",
          "extract_key_sentences"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "from app.core.logging import get_logger\nIntent Module - \uc0ac\uc6a9\uc790 \uc758\ub3c4 \ubd84\uc11d \ubc0f \ubd84\ub958 \uc2dc\uc2a4\ud15c\n\uc0ac\uc6a9\uc790\uc758 \uc9c8\ubb38 \uc758\ub3c4\ub97c \ubd84\uc11d\ud558\uace0 \uc801\uc808\ud55c \uc751\ub2f5 \uc2a4\ud0c0\uc77c\uc744 \uacb0\uc815\ud569\ub2c8\ub2e4.\n\ud55c\uad6d\uc5b4 \ucc98\ub9ac\ub97c \uc9c0\uc6d0\ud558\uba70 \ub2e4\uc591\ud55c \uc9c8\ubb38 \uc720\ud615\uc744 \uc778\uc2dd\ud569\ub2c8\ub2e4."
  },
  "modules.cache_module": {
    "path": "modules/cache_module.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/cache_module.py",
    "lines_of_code": 371,
    "imports": [
      "os",
      "time",
      "json",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "typing.Tuple",
      "typing.List",
      "collections",
      "collections.OrderedDict",
      "pickle"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 25,
        "docstring": "Args:\n    config: \uc124\uc815 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "config"
        ],
        "is_async": false
      },
      {
        "name": "manage_cache",
        "line": 59,
        "docstring": "\uce90\uc2dc \ud06c\uae30 \uad00\ub9ac - LRU \ubc29\uc2dd\n\nArgs:\n    cache_dict: \uad00\ub9ac\ud560 \uce90\uc2dc \ub515\uc154\ub108\ub9ac\n    key: \uce90\uc2dc \ud0a4\n    value: \uc800\uc7a5\ud560 \uac12\n    max_size: \ucd5c\ub300 \ud06c\uae30 (\uae30\ubcf8\uac12: self.max_cache_size)",
        "args": [
          "self",
          "cache_dict",
          "key",
          "value",
          "max_size"
        ],
        "is_async": false
      },
      {
        "name": "get_from_cache",
        "line": 86,
        "docstring": "\uce90\uc2dc\uc5d0\uc11c \uac00\uc838\uc624\uae30 (TTL \uccb4\ud06c \ubc0f \ud0c0\uc784\uc2a4\ud0ec\ud504 \uac31\uc2e0)\n\nArgs:\n    cache_dict: \uce90\uc2dc \ub515\uc154\ub108\ub9ac\n    key: \uce90\uc2dc \ud0a4\n\nReturns:\n    \uce90\uc2dc\ub41c \uac12 \ub610\ub294 None",
        "args": [
          "self",
          "cache_dict",
          "key"
        ],
        "is_async": false
      },
      {
        "name": "set_document_cache",
        "line": 127,
        "docstring": "\ubb38\uc11c \uce90\uc2dc\uc5d0 \uc800\uc7a5",
        "args": [
          "self",
          "key",
          "value"
        ],
        "is_async": false
      },
      {
        "name": "get_document_cache",
        "line": 131,
        "docstring": "\ubb38\uc11c \uce90\uc2dc\uc5d0\uc11c \uac00\uc838\uc624\uae30",
        "args": [
          "self",
          "key"
        ],
        "is_async": false
      },
      {
        "name": "set_metadata_cache",
        "line": 135,
        "docstring": "\uba54\ud0c0\ub370\uc774\ud130 \uce90\uc2dc\uc5d0 \uc800\uc7a5",
        "args": [
          "self",
          "key",
          "value"
        ],
        "is_async": false
      },
      {
        "name": "get_metadata_cache",
        "line": 139,
        "docstring": "\uba54\ud0c0\ub370\uc774\ud130 \uce90\uc2dc\uc5d0\uc11c \uac00\uc838\uc624\uae30",
        "args": [
          "self",
          "key"
        ],
        "is_async": false
      },
      {
        "name": "set_answer_cache",
        "line": 143,
        "docstring": "\uc751\ub2f5 \uce90\uc2dc\uc5d0 \uc800\uc7a5",
        "args": [
          "self",
          "query",
          "answer"
        ],
        "is_async": false
      },
      {
        "name": "get_answer_cache",
        "line": 147,
        "docstring": "\uc751\ub2f5 \uce90\uc2dc\uc5d0\uc11c \uac00\uc838\uc624\uae30",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "set_pdf_cache",
        "line": 151,
        "docstring": "PDF \ud14d\uc2a4\ud2b8 \uce90\uc2dc\uc5d0 \uc800\uc7a5",
        "args": [
          "self",
          "pdf_path",
          "text_data"
        ],
        "is_async": false
      },
      {
        "name": "get_pdf_cache",
        "line": 155,
        "docstring": "PDF \ud14d\uc2a4\ud2b8 \uce90\uc2dc\uc5d0\uc11c \uac00\uc838\uc624\uae30",
        "args": [
          "self",
          "pdf_path"
        ],
        "is_async": false
      },
      {
        "name": "set_search_cache",
        "line": 159,
        "docstring": "\uac80\uc0c9 \uacb0\uacfc \uce90\uc2dc\uc5d0 \uc800\uc7a5",
        "args": [
          "self",
          "query",
          "results"
        ],
        "is_async": false
      },
      {
        "name": "get_search_cache",
        "line": 163,
        "docstring": "\uac80\uc0c9 \uacb0\uacfc \uce90\uc2dc\uc5d0\uc11c \uac00\uc838\uc624\uae30",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "clear_all_cache",
        "line": 167,
        "docstring": "\ubaa8\ub4e0 \uce90\uc2dc \ucd08\uae30\ud654",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "clear_cache",
        "line": 181,
        "docstring": "\ud2b9\uc815 \uce90\uc2dc \ucd08\uae30\ud654\n\nArgs:\n    cache_type: 'documents', 'metadata', 'answer', 'pdf', 'search', 'all'",
        "args": [
          "self",
          "cache_type"
        ],
        "is_async": false
      },
      {
        "name": "get_cache_stats",
        "line": 203,
        "docstring": "\uce90\uc2dc \uc0c1\ud0dc \uc815\ubcf4 \ubc18\ud658",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "save_cache_to_disk",
        "line": 235,
        "docstring": "\uce90\uc2dc\ub97c \ub514\uc2a4\ud06c\uc5d0 \uc800\uc7a5\n\nReturns:\n    \uc131\uacf5 \uc5ec\ubd80",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "load_cache_from_disk",
        "line": 266,
        "docstring": "\ub514\uc2a4\ud06c\uc5d0\uc11c \uce90\uc2dc \ub85c\ub4dc\n\nReturns:\n    \uc131\uacf5 \uc5ec\ubd80",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_cleanup_expired_items",
        "line": 303,
        "docstring": "\ub9cc\ub8cc\ub41c \uce90\uc2dc \ud56d\ubaa9 \uc81c\uac70\n\nReturns:\n    \uc81c\uac70\ub41c \ud56d\ubaa9 \uc218",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "optimize_cache",
        "line": 336,
        "docstring": "\uce90\uc2dc \ucd5c\uc801\ud654 (\ub9cc\ub8cc \ud56d\ubaa9 \uc81c\uac70, \ud06c\uae30 \uc870\uc815)\n\nReturns:\n    \ucd5c\uc801\ud654 \uacb0\uacfc",
        "args": [
          "self"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "CacheModule",
        "line": 22,
        "docstring": "\uce90\uc2dc \uad00\ub9ac \ud1b5\ud569 \ubaa8\ub4c8",
        "methods": [
          "__init__",
          "manage_cache",
          "get_from_cache",
          "set_document_cache",
          "get_document_cache",
          "set_metadata_cache",
          "get_metadata_cache",
          "set_answer_cache",
          "get_answer_cache",
          "set_pdf_cache",
          "get_pdf_cache",
          "set_search_cache",
          "get_search_cache",
          "clear_all_cache",
          "clear_cache",
          "get_cache_stats",
          "save_cache_to_disk",
          "load_cache_from_disk",
          "_cleanup_expired_items",
          "optimize_cache"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "from app.core.logging import get_logger\n\uce90\uc2dc \uad00\ub9ac \ubaa8\ub4c8 - Perfect RAG\uc5d0\uc11c \ubd84\ub9ac\ub41c \uce90\uc2dc \uad00\ub828 \uae30\ub2a5\n2025-09-29 \ub9ac\ud329\ud1a0\ub9c1\n\n\uc774 \ubaa8\ub4c8\uc740 LRU \uce90\uc2dc, TTL \uad00\ub9ac, \ub2e4\uc911 \uce90\uc2dc \uc2dc\uc2a4\ud15c \ub4f1\n\uce90\uc2f1 \uad00\ub828 \uae30\ub2a5\uc744 \ub2f4\ub2f9\ud569\ub2c8\ub2e4."
  },
  "modules.optimized_llm": {
    "path": "modules/optimized_llm.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/optimized_llm.py",
    "lines_of_code": 33,
    "imports": [],
    "functions": [
      {
        "name": "__init__",
        "line": 5,
        "docstring": null,
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "generate_optimized",
        "line": 9,
        "docstring": "\ucd5c\uc801\ud654\ub41c \uc751\ub2f5 \uc0dd\uc131",
        "args": [
          "self",
          "query",
          "context"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "OptimizedLLMModule",
        "line": 2,
        "docstring": "\ucd5c\uc801\ud654\ub41c LLM \ubaa8\ub4c8",
        "methods": [
          "__init__",
          "generate_optimized"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": null
  },
  "modules.reranker": {
    "path": "modules/reranker.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/reranker.py",
    "lines_of_code": 300,
    "imports": [
      "re",
      "datetime",
      "datetime.datetime",
      "datetime.timedelta",
      "typing",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "app.core.logging",
      "app.core.logging.get_logger"
    ],
    "functions": [
      {
        "name": "rerank_search_results",
        "line": 284,
        "docstring": "\uac80\uc0c9 \uacb0\uacfc \ub9ac\ub7ad\ud0b9 (\ud568\uc218\ud615 \uc778\ud130\ud398\uc774\uc2a4)\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758\n    results: \uac80\uc0c9 \uacb0\uacfc \ub9ac\uc2a4\ud2b8\n    top_k: \ubc18\ud658\ud560 \ucd5c\ub300 \ubb38\uc11c \uc218\n    config: \ub9ac\ub7ad\ucee4 \uc124\uc815\n\nReturns:\n    \uc7ac\uc815\ub82c\ub41c \uac80\uc0c9 \uacb0\uacfc",
        "args": [
          "query",
          "results",
          "top_k",
          "config"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 23,
        "docstring": "Args:\n    config: \ub9ac\ub7ad\ucee4 \uc124\uc815\n        - title_match_boost: \uc81c\ubaa9 \ub9e4\uce58 \uac00\uc911\uce58 (\uae30\ubcf8\uac12: 0.3)\n        - recent_boost: \ucd5c\uadfc \ubb38\uc11c \uac00\uc911\uce58 (\uae30\ubcf8\uac12: 0.2)\n        - category_boost: \uce74\ud14c\uace0\ub9ac \ub9e4\uce58 \uac00\uc911\uce58 (\uae30\ubcf8\uac12: 0.1)\n        - recent_days: \ucd5c\uadfc \ubb38\uc11c \uae30\uc900 \uc77c\uc218 (\uae30\ubcf8\uac12: 7)",
        "args": [
          "self",
          "config"
        ],
        "is_async": false
      },
      {
        "name": "rerank",
        "line": 44,
        "docstring": "\uac80\uc0c9 \uacb0\uacfc \uc7ac\uc815\ub82c\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758\n    results: \uac80\uc0c9 \uacb0\uacfc \ub9ac\uc2a4\ud2b8 (\uac01 \ud56d\ubaa9\uc5d0 filename, date, category, score \ud3ec\ud568)\n    top_k: \ubc18\ud658\ud560 \ucd5c\ub300 \ubb38\uc11c \uc218 (None\uc774\uba74 \uc804\uccb4)\n\nReturns:\n    \uc7ac\uc815\ub82c\ub41c \uac80\uc0c9 \uacb0\uacfc \ub9ac\uc2a4\ud2b8 (rerank_score, boost_reason \ud544\ub4dc \ucd94\uac00)",
        "args": [
          "self",
          "query",
          "results",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "_extract_keywords",
        "line": 125,
        "docstring": "\ucffc\ub9ac\uc5d0\uc11c \ud0a4\uc6cc\ub4dc \ucd94\ucd9c\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758\n\nReturns:\n    \ud0a4\uc6cc\ub4dc \ub9ac\uc2a4\ud2b8 (\uc18c\ubb38\uc790 \ubcc0\ud658, 2\uae00\uc790 \uc774\uc0c1, \ubd88\uc6a9\uc5b4 \uc81c\uac70)",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_extract_category_keywords",
        "line": 150,
        "docstring": "\ucffc\ub9ac\uc5d0\uc11c \uce74\ud14c\uace0\ub9ac \uad00\ub828 \ud0a4\uc6cc\ub4dc \ucd94\ucd9c\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \uc9c8\uc758\n\nReturns:\n    \uce74\ud14c\uace0\ub9ac \ud0a4\uc6cc\ub4dc \ub9ac\uc2a4\ud2b8",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_calculate_title_boost",
        "line": 177,
        "docstring": "\uc81c\ubaa9 \ub9e4\uce58 \ubd80\uc2a4\ud2b8 \uacc4\uc0b0\n\nArgs:\n    filename: \ud30c\uc77c\uba85\n    query_keywords: \ucffc\ub9ac \ud0a4\uc6cc\ub4dc \ub9ac\uc2a4\ud2b8\n\nReturns:\n    \ubd80\uc2a4\ud2b8 \uc810\uc218 (0 ~ title_match_boost)",
        "args": [
          "self",
          "filename",
          "query_keywords"
        ],
        "is_async": false
      },
      {
        "name": "_calculate_recent_boost",
        "line": 204,
        "docstring": "\ucd5c\uadfc \ubb38\uc11c \ubd80\uc2a4\ud2b8 \uacc4\uc0b0\n\nArgs:\n    date_str: \ubb38\uc11c \ub0a0\uc9dc (YYYY-MM-DD \ud615\uc2dd)\n    threshold: \ucd5c\uadfc \ubb38\uc11c \uae30\uc900 \ub0a0\uc9dc (\ud604\uc7ac - N\uc77c)\n\nReturns:\n    \ubd80\uc2a4\ud2b8 \uc810\uc218 (0 \ub610\ub294 recent_boost)",
        "args": [
          "self",
          "date_str",
          "threshold"
        ],
        "is_async": false
      },
      {
        "name": "_calculate_category_boost",
        "line": 235,
        "docstring": "\uce74\ud14c\uace0\ub9ac \uc77c\uce58 \ubd80\uc2a4\ud2b8 \uacc4\uc0b0\n\nArgs:\n    category: \ubb38\uc11c \uce74\ud14c\uace0\ub9ac\n    category_keywords: \ucffc\ub9ac\uc5d0\uc11c \ucd94\ucd9c\ud55c \uce74\ud14c\uace0\ub9ac \ud0a4\uc6cc\ub4dc\n\nReturns:\n    \ubd80\uc2a4\ud2b8 \uc810\uc218 (0 \ub610\ub294 category_boost)",
        "args": [
          "self",
          "category",
          "category_keywords"
        ],
        "is_async": false
      },
      {
        "name": "get_stats",
        "line": 258,
        "docstring": "\ub9ac\ub7ad\ud0b9 \ud1b5\uacc4 \ubc18\ud658\n\nArgs:\n    reranked_results: rerank() \uba54\uc11c\ub4dc\uc758 \ubc18\ud658\uac12\n\nReturns:\n    \ud1b5\uacc4 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "reranked_results"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "RuleBasedReranker",
        "line": 20,
        "docstring": "\uaddc\uce59 \uae30\ubc18 \ub9ac\ub7ad\ucee4 - \uac00\uc911\uce58\ub97c \ud1b5\ud55c \uac80\uc0c9 \uacb0\uacfc \uc7ac\uc815\ub82c",
        "methods": [
          "__init__",
          "rerank",
          "_extract_keywords",
          "_extract_category_keywords",
          "_calculate_title_boost",
          "_calculate_recent_boost",
          "_calculate_category_boost",
          "get_stats"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\ub9ac\ub7ad\ucee4 \ubaa8\ub4c8 - L2 RAG \uc644\uc131\uc744 \uc704\ud55c \uaddc\uce59 \uae30\ubc18 \ub9ac\ub7ad\ucee4\n2025-10-25 \uc0dd\uc131\n\n\uac80\uc0c9 \uacb0\uacfc\ub97c \ub2e4\uc74c \uae30\uc900\uc73c\ub85c \uc7ac\uc815\ub82c:\n1. \uc81c\ubaa9 \uc815\ud655 \ub9e4\uce58: \ucffc\ub9ac \ud0a4\uc6cc\ub4dc\uac00 filename\uc5d0 \uc815\ud655\ud788 \ud3ec\ud568 \uc2dc +0.3\n2. \ucd5c\uadfc 7\uc77c: \ubb38\uc11c \ub0a0\uc9dc\uac00 \ud604\uc7ac\ub85c\ubd80\ud130 7\uc77c \uc774\ub0b4 \uc2dc +0.2\n3. \uce74\ud14c\uace0\ub9ac \uc77c\uce58: \uce74\ud14c\uace0\ub9ac\uac00 \ucffc\ub9ac\uc640 \ub9e4\uce6d \uc2dc +0.1"
  },
  "modules.search_module": {
    "path": "modules/search_module.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/search_module.py",
    "lines_of_code": 434,
    "imports": [
      "app.core.logging",
      "app.core.logging.get_logger",
      "os",
      "re",
      "time",
      "json",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "typing.Tuple",
      "concurrent.futures",
      "concurrent.futures.ThreadPoolExecutor",
      "concurrent.futures.as_completed",
      "pdfplumber",
      "everything_like_search",
      "everything_like_search.EverythingLikeSearch",
      "modules.metadata_extractor",
      "modules.metadata_extractor.MetadataExtractor",
      "modules.metadata_db",
      "modules.metadata_db.MetadataDB",
      "hashlib",
      "sqlite3"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 31,
        "docstring": "Args:\n    docs_dir: \ubb38\uc11c \ub514\ub809\ud1a0\ub9ac \uacbd\ub85c\n    config: \uc124\uc815 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "docs_dir",
          "config"
        ],
        "is_async": false
      },
      {
        "name": "search_by_drafter",
        "line": 72,
        "docstring": "\uae30\uc548\uc790\ubcc4 \ubb38\uc11c \uac80\uc0c9 - department \ud544\ub4dc\uc5d0\uc11c \uc815\ud655\ud788 \uc77c\uce58\ud558\ub294 \ubb38\uc11c\ub9cc \ubc18\ud658\n\nArgs:\n    drafter_name: \uae30\uc548\uc790 \uc774\ub984\n    top_k: \ubc18\ud658\ud560 \ucd5c\ub300 \ubb38\uc11c \uc218\n\nReturns:\n    \uae30\uc548\uc790\uac00 \uc791\uc131\ud55c \ubb38\uc11c \ub9ac\uc2a4\ud2b8",
        "args": [
          "self",
          "drafter_name",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "search_by_content",
        "line": 119,
        "docstring": "\ub0b4\uc6a9 \uae30\ubc18 \ubb38\uc11c \uac80\uc0c9 - Everything-like \ucd08\uace0\uc18d \uac80\uc0c9 \uc0ac\uc6a9\n\nArgs:\n    query: \uac80\uc0c9 \ucffc\ub9ac\n    top_k: \ubc18\ud658\ud560 \ucd5c\ub300 \ubb38\uc11c \uc218\n\nReturns:\n    \uac80\uc0c9 \uacb0\uacfc \ub9ac\uc2a4\ud2b8",
        "args": [
          "self",
          "query",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "_legacy_search",
        "line": 223,
        "docstring": "\ub808\uac70\uc2dc \uac80\uc0c9 (Everything \uc0ac\uc6a9 \ubd88\uac00\uc2dc \ud3f4\ubc31)",
        "args": [
          "self",
          "query",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "_parallel_search_pdfs",
        "line": 234,
        "docstring": "PDF \ud30c\uc77c\ub4e4\uc744 \ubcd1\ub82c\ub85c \uac80\uc0c9",
        "args": [
          "self",
          "pdf_files",
          "query",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "find_best_document",
        "line": 276,
        "docstring": "\ucffc\ub9ac\uc5d0 \uac00\uc7a5 \uc801\ud569\ud55c \ub2e8\uc77c \ubb38\uc11c \ucc3e\uae30",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "search_multiple_documents",
        "line": 283,
        "docstring": "\uc5ec\ub7ec \ubb38\uc11c \ub3d9\uc2dc \uac80\uc0c9 \ubc0f \ud1b5\ud569 \uacb0\uacfc \ubc18\ud658",
        "args": [
          "self",
          "query",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "search_by_date_range",
        "line": 303,
        "docstring": "\ub0a0\uc9dc \ubc94\uc704\ub85c \ubb38\uc11c \uac80\uc0c9",
        "args": [
          "self",
          "start_date",
          "end_date"
        ],
        "is_async": false
      },
      {
        "name": "search_by_category",
        "line": 320,
        "docstring": "\uce74\ud14c\uace0\ub9ac\ubcc4 \ubb38\uc11c \uac80\uc0c9",
        "args": [
          "self",
          "category"
        ],
        "is_async": false
      },
      {
        "name": "get_search_statistics",
        "line": 336,
        "docstring": "\uac80\uc0c9 \ud1b5\uacc4 \ubc18\ud658",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_format_table_as_markdown",
        "line": 351,
        "docstring": "\ud45c\ub97c \ub9c8\ud06c\ub2e4\uc6b4 \ud615\uc2dd\uc73c\ub85c \ubcc0\ud658",
        "args": [
          "self",
          "table"
        ],
        "is_async": false
      },
      {
        "name": "_load_ocr_cache",
        "line": 374,
        "docstring": "OCR \uce90\uc2dc \ub85c\ub4dc",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_get_ocr_text",
        "line": 388,
        "docstring": "PDF\uc5d0\uc11c OCR \ud14d\uc2a4\ud2b8 \uac00\uc838\uc624\uae30 (\uce90\uc2dc \uc6b0\uc120)",
        "args": [
          "self",
          "pdf_path"
        ],
        "is_async": false
      },
      {
        "name": "_extract_date_from_filename",
        "line": 407,
        "docstring": "\ud30c\uc77c\uba85\uc5d0\uc11c \ub0a0\uc9dc \ucd94\ucd9c",
        "args": [
          "self",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "_extract_category_from_path",
        "line": 423,
        "docstring": "\uacbd\ub85c\uc5d0\uc11c \uce74\ud14c\uace0\ub9ac \ucd94\ucd9c",
        "args": [
          "self",
          "path"
        ],
        "is_async": false
      },
      {
        "name": "clear_cache",
        "line": 431,
        "docstring": "\uac80\uc0c9 \uce90\uc2dc \ucd08\uae30\ud654",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "search_single_pdf",
        "line": 238,
        "docstring": null,
        "args": [
          "pdf_path"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "SearchModule",
        "line": 28,
        "docstring": "\uac80\uc0c9 \uae30\ub2a5 \ud1b5\ud569 \ubaa8\ub4c8",
        "methods": [
          "__init__",
          "search_by_drafter",
          "search_by_content",
          "_legacy_search",
          "_parallel_search_pdfs",
          "find_best_document",
          "search_multiple_documents",
          "search_by_date_range",
          "search_by_category",
          "get_search_statistics",
          "_format_table_as_markdown",
          "_load_ocr_cache",
          "_get_ocr_text",
          "_extract_date_from_filename",
          "_extract_category_from_path",
          "clear_cache"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "\uac80\uc0c9 \ubaa8\ub4c8 - Perfect RAG\uc5d0\uc11c \ubd84\ub9ac\ub41c \uac80\uc0c9 \uae30\ub2a5\n2025-09-29 \ub9ac\ud329\ud1a0\ub9c1\n\n\uc774 \ubaa8\ub4c8\uc740 perfect_rag.py\uc5d0\uc11c \uac80\uc0c9 \uad00\ub828 \uae30\ub2a5\uc744 \ubd84\ub9ac\ud558\uc5ec\n\uc720\uc9c0\ubcf4\uc218\uc131\uacfc \uac00\ub3c5\uc131\uc744 \ub192\uc774\uae30 \uc704\ud574 \uc0dd\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4."
  },
  "modules.llm_module": {
    "path": "modules/llm_module.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/llm_module.py",
    "lines_of_code": 401,
    "imports": [
      "os",
      "re",
      "time",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "typing.List",
      "json",
      "rag_system.qwen_llm",
      "rag_system.qwen_llm.QwenLLM",
      "rag_system.llm_singleton",
      "rag_system.llm_singleton.LLMSingleton"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 32,
        "docstring": "Args:\n    config: \uc124\uc815 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "config"
        ],
        "is_async": false
      },
      {
        "name": "_init_prompts",
        "line": 48,
        "docstring": "\ud504\ub86c\ud504\ud2b8 \ud15c\ud50c\ub9bf \ucd08\uae30\ud654",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "load_llm",
        "line": 135,
        "docstring": "LLM \ubaa8\ub378 \ub85c\ub4dc (\uc2f1\uae00\ud1a4 \uc0ac\uc6a9)",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "generate_response",
        "line": 161,
        "docstring": "LLM\uc744 \uc0ac\uc6a9\ud558\uc5ec \uc751\ub2f5 \uc0dd\uc131\n\nArgs:\n    context: \ucee8\ud14d\uc2a4\ud2b8 \uc815\ubcf4\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n    intent_type: \uc758\ub3c4 \uc720\ud615 (summary, comparison, recommendation \ub4f1)\n    temperature: \uc0dd\uc131 \uc628\ub3c4\n    max_tokens: \ucd5c\ub300 \ud1a0\ud070 \uc218\n\nReturns:\n    \uc0dd\uc131\ub41c \uc751\ub2f5",
        "args": [
          "self",
          "context",
          "query",
          "intent_type",
          "temperature",
          "max_tokens"
        ],
        "is_async": false
      },
      {
        "name": "generate_smart_summary",
        "line": 208,
        "docstring": "\uc2a4\ub9c8\ud2b8 \uc694\uc57d \uc0dd\uc131\n\nArgs:\n    text: \uc694\uc57d\ud560 \ud14d\uc2a4\ud2b8\n    title: \ubb38\uc11c \uc81c\ubaa9\n\nReturns:\n    \uc694\uc57d\ub41c \ud14d\uc2a4\ud2b8",
        "args": [
          "self",
          "text",
          "title"
        ],
        "is_async": false
      },
      {
        "name": "generate_conversational_response",
        "line": 239,
        "docstring": "\uc790\uc5f0\uc2a4\ub7ec\uc6b4 \ub300\ud654\ud615 \uc751\ub2f5 \uc0dd\uc131\n\nArgs:\n    context: \ubb38\uc11c \ucee8\ud14d\uc2a4\ud2b8\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n    intent: \uc758\ub3c4 \uc815\ubcf4\n\nReturns:\n    \ub300\ud654\ud615 \uc751\ub2f5",
        "args": [
          "self",
          "context",
          "query",
          "intent"
        ],
        "is_async": false
      },
      {
        "name": "generate_analysis_response",
        "line": 266,
        "docstring": "\ub370\uc774\ud130 \ubd84\uc11d \uc751\ub2f5 \uc0dd\uc131\n\nArgs:\n    data: \ubd84\uc11d\ud560 \ub370\uc774\ud130\n    query: \uc0ac\uc6a9\uc790 \uc9c8\ubb38\n\nReturns:\n    \ubd84\uc11d \uc751\ub2f5",
        "args": [
          "self",
          "data",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "prepare_context",
        "line": 287,
        "docstring": "LLM \uc785\ub825\uc744 \uc704\ud55c \ucee8\ud14d\uc2a4\ud2b8 \uc900\ube44\n\nArgs:\n    content: \uc6d0\ubcf8 \ucf58\ud150\uce20\n    max_length: \ucd5c\ub300 \uae38\uc774\n\nReturns:\n    \uc900\ube44\ub41c \ucee8\ud14d\uc2a4\ud2b8",
        "args": [
          "self",
          "content",
          "max_length"
        ],
        "is_async": false
      },
      {
        "name": "_format_response",
        "line": 314,
        "docstring": "\uc751\ub2f5 \ud3ec\ub9f7\ud305",
        "args": [
          "self",
          "raw_response"
        ],
        "is_async": false
      },
      {
        "name": "_format_data_for_analysis",
        "line": 333,
        "docstring": "\ubd84\uc11d\uc744 \uc704\ud55c \ub370\uc774\ud130 \ud3ec\ub9f7\ud305",
        "args": [
          "self",
          "data"
        ],
        "is_async": false
      },
      {
        "name": "_extract_key_sentences",
        "line": 349,
        "docstring": "\ud575\uc2ec \ubb38\uc7a5 \ucd94\ucd9c (\ud3f4\ubc31\uc6a9)",
        "args": [
          "self",
          "text",
          "num_sentences"
        ],
        "is_async": false
      },
      {
        "name": "_generate_fallback_response_simple",
        "line": 366,
        "docstring": "\uac04\ub2e8\ud55c \ud3f4\ubc31 \uc751\ub2f5 \uc0dd\uc131",
        "args": [
          "self",
          "context",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "get_prompt_template",
        "line": 390,
        "docstring": "\ud504\ub86c\ud504\ud2b8 \ud15c\ud50c\ub9bf \ubc18\ud658",
        "args": [
          "self",
          "intent_type"
        ],
        "is_async": false
      },
      {
        "name": "update_prompt_template",
        "line": 394,
        "docstring": "\ud504\ub86c\ud504\ud2b8 \ud15c\ud50c\ub9bf \uc5c5\ub370\uc774\ud2b8",
        "args": [
          "self",
          "intent_type",
          "template"
        ],
        "is_async": false
      },
      {
        "name": "clear_llm",
        "line": 398,
        "docstring": "LLM \uc778\uc2a4\ud134\uc2a4 \uc815\ub9ac",
        "args": [
          "self"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "LLMModule",
        "line": 29,
        "docstring": "LLM \ucc98\ub9ac \ud1b5\ud569 \ubaa8\ub4c8",
        "methods": [
          "__init__",
          "_init_prompts",
          "load_llm",
          "generate_response",
          "generate_smart_summary",
          "generate_conversational_response",
          "generate_analysis_response",
          "prepare_context",
          "_format_response",
          "_format_data_for_analysis",
          "_extract_key_sentences",
          "_generate_fallback_response_simple",
          "get_prompt_template",
          "update_prompt_template",
          "clear_llm"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "from app.core.logging import get_logger\nLLM \ucc98\ub9ac \ubaa8\ub4c8 - Perfect RAG\uc5d0\uc11c \ubd84\ub9ac\ub41c LLM \uad00\ub828 \uae30\ub2a5\n2025-09-29 \ub9ac\ud329\ud1a0\ub9c1\n\n\uc774 \ubaa8\ub4c8\uc740 Qwen/Llama \ubaa8\ub378 \ucc98\ub9ac, \ud504\ub86c\ud504\ud2b8 \uad00\ub9ac, \uc751\ub2f5 \uc0dd\uc131 \ub4f1\nLLM \uad00\ub828 \uae30\ub2a5\uc744 \ub2f4\ub2f9\ud569\ub2c8\ub2e4."
  },
  "modules.ocr_processor": {
    "path": "modules/ocr_processor.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/ocr_processor.py",
    "lines_of_code": 350,
    "imports": [
      "os",
      "tempfile",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Optional",
      "typing.List",
      "typing.Dict",
      "typing.Tuple",
      "time",
      "PIL",
      "PIL.Image",
      "pytesseract",
      "pdf2image",
      "pdf2image.convert_from_path",
      "pdfplumber",
      "hashlib",
      "json",
      "sqlite3",
      "datetime",
      "datetime.datetime",
      "re"
    ],
    "functions": [
      {
        "name": "test_ocr",
        "line": 330,
        "docstring": "OCR \uae30\ub2a5 \ud14c\uc2a4\ud2b8",
        "args": [],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 29,
        "docstring": "Args:\n    cache_dir: OCR \uacb0\uacfc \uce90\uc2dc \ub514\ub809\ud1a0\ub9ac",
        "args": [
          "self",
          "cache_dir"
        ],
        "is_async": false
      },
      {
        "name": "_init_db",
        "line": 45,
        "docstring": "\uce90\uc2dc DB \ucd08\uae30\ud654",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_get_file_hash",
        "line": 65,
        "docstring": "\ud30c\uc77c \ud574\uc2dc \uc0dd\uc131",
        "args": [
          "self",
          "file_path"
        ],
        "is_async": false
      },
      {
        "name": "_check_cache",
        "line": 73,
        "docstring": "\uce90\uc2dc \ud655\uc778",
        "args": [
          "self",
          "file_hash"
        ],
        "is_async": false
      },
      {
        "name": "_save_cache",
        "line": 95,
        "docstring": "\uce90\uc2dc \uc800\uc7a5",
        "args": [
          "self",
          "file_hash",
          "file_path",
          "text",
          "is_scanned",
          "page_count",
          "metadata"
        ],
        "is_async": false
      },
      {
        "name": "is_scanned_pdf",
        "line": 113,
        "docstring": "PDF\uac00 \uc2a4\uce94 \ubb38\uc11c\uc778\uc9c0 \ud655\uc778\n\nReturns:\n    (is_scanned, confidence): \uc2a4\uce94 \uc5ec\ubd80\uc640 \ud655\uc2e0\ub3c4(0-1)",
        "args": [
          "self",
          "pdf_path"
        ],
        "is_async": false
      },
      {
        "name": "extract_with_ocr",
        "line": 147,
        "docstring": "PDF\uc5d0\uc11c OCR\ub85c \ud14d\uc2a4\ud2b8 \ucd94\ucd9c\n\nArgs:\n    pdf_path: PDF \ud30c\uc77c \uacbd\ub85c\n    force: \uce90\uc2dc \ubb34\uc2dc\ud558\uace0 \uac15\uc81c OCR\n\nReturns:\n    \ucd94\ucd9c \uacb0\uacfc \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "pdf_path",
          "force"
        ],
        "is_async": false
      },
      {
        "name": "_preprocess_image",
        "line": 245,
        "docstring": "\uc774\ubbf8\uc9c0 \uc804\ucc98\ub9ac (OCR \uc815\ud655\ub3c4 \ud5a5\uc0c1)",
        "args": [
          "self",
          "image"
        ],
        "is_async": false
      },
      {
        "name": "_clean_text",
        "line": 254,
        "docstring": "\ud14d\uc2a4\ud2b8 \uc815\ub9ac",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "process_directory",
        "line": 268,
        "docstring": "\ub514\ub809\ud1a0\ub9ac \uc804\uccb4 OCR \ucc98\ub9ac\n\nReturns:\n    \ucc98\ub9ac \uacb0\uacfc \ud1b5\uacc4",
        "args": [
          "self",
          "directory",
          "pattern"
        ],
        "is_async": false
      },
      {
        "name": "get_cache_stats",
        "line": 306,
        "docstring": "\uce90\uc2dc \ud1b5\uacc4",
        "args": [
          "self"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "OCRProcessor",
        "line": 26,
        "docstring": "PDF OCR \ucc98\ub9ac\uae30",
        "methods": [
          "__init__",
          "_init_db",
          "_get_file_hash",
          "_check_cache",
          "_save_cache",
          "is_scanned_pdf",
          "extract_with_ocr",
          "_preprocess_image",
          "_clean_text",
          "process_directory",
          "get_cache_stats"
        ],
        "bases": []
      }
    ],
    "entry_point": true,
    "docstring": "from app.core.logging import get_logger\nOCR \ucc98\ub9ac \ubaa8\ub4c8 - \uc2a4\uce94\ub41c PDF \ubb38\uc11c\ub97c \ud14d\uc2a4\ud2b8\ub85c \ubcc0\ud658"
  },
  "modules.metadata_db": {
    "path": "modules/metadata_db.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/metadata_db.py",
    "lines_of_code": 747,
    "imports": [
      "app.core.logging",
      "app.core.logging.get_logger",
      "sqlite3",
      "json",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "re",
      "functools",
      "functools.lru_cache",
      "shutil",
      "json",
      "os",
      "config.indexing",
      "config.indexing.DB_PATHS",
      "sqlite3",
      "os",
      "config.indexing",
      "config.indexing.DB_PATHS",
      "pdfplumber"
    ],
    "functions": [
      {
        "name": "extract_metadata_from_filename",
        "line": 704,
        "docstring": "\ud30c\uc77c\uba85\uc5d0\uc11c \uba54\ud0c0\ub370\uc774\ud130 \ucd94\ucd9c",
        "args": [
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 21,
        "docstring": null,
        "args": [
          "self",
          "db_path"
        ],
        "is_async": false
      },
      {
        "name": "init_database",
        "line": 27,
        "docstring": "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \ucd08\uae30\ud654 \ubc0f \ud14c\uc774\ube14 \uc0dd\uc131",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "_migrate_schema",
        "line": 128,
        "docstring": "\uc2a4\ud0a4\ub9c8 \ub9c8\uc774\uadf8\ub808\uc774\uc158: \uc2e0\uaddc \uceec\ub7fc \ucd94\uac00",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "add_document",
        "line": 169,
        "docstring": "\ubb38\uc11c \uba54\ud0c0\ub370\uc774\ud130 \ucd94\uac00",
        "args": [
          "self",
          "metadata"
        ],
        "is_async": false
      },
      {
        "name": "search_by_year",
        "line": 214,
        "docstring": "\uc5f0\ub3c4\ubcc4 \uac80\uc0c9",
        "args": [
          "self",
          "year"
        ],
        "is_async": false
      },
      {
        "name": "search_documents",
        "line": 221,
        "docstring": "\ub2e4\uc911 \ud544\ud130 \uac80\uc0c9 (drafter, year \uc870\ud569 \uc9c0\uc6d0)\n\nArgs:\n    drafter: \uae30\uc548\uc790\uba85 (\ubd80\ubd84 \uc77c\uce58)\n    year: \uc5f0\ub3c4 (display_date \uae30\uc900, \uc608: \"2024\")\n    limit: \ucd5c\ub300 \uacb0\uacfc \uc218\n\nReturns:\n    \uac80\uc0c9 \uacb0\uacfc \ub9ac\uc2a4\ud2b8 (\ub0a0\uc9dc \ub0b4\ub9bc\ucc28\uc21c)",
        "args": [
          "self",
          "drafter",
          "year",
          "limit"
        ],
        "is_async": false
      },
      {
        "name": "count_documents",
        "line": 255,
        "docstring": "\ubb38\uc11c \uac1c\uc218 \uc870\ud68c (\ud544\ud130 \uc801\uc6a9)\n\nArgs:\n    drafter: \uae30\uc548\uc790\uba85 (\ubd80\ubd84 \uc77c\uce58)\n    year: \uc5f0\ub3c4 (display_date \uae30\uc900, \uc608: \"2024\")\n\nReturns:\n    \uc870\uac74\uc5d0 \ub9de\ub294 \ubb38\uc11c \uac1c\uc218",
        "args": [
          "self",
          "drafter",
          "year"
        ],
        "is_async": false
      },
      {
        "name": "search_by_category",
        "line": 284,
        "docstring": "\uce74\ud14c\uace0\ub9ac\ubcc4 \uac80\uc0c9",
        "args": [
          "self",
          "category"
        ],
        "is_async": false
      },
      {
        "name": "search_by_keyword",
        "line": 292,
        "docstring": "\ud0a4\uc6cc\ub4dc \uac80\uc0c9 (FTS \uc0ac\uc6a9)",
        "args": [
          "self",
          "keyword"
        ],
        "is_async": false
      },
      {
        "name": "search_by_date_range",
        "line": 306,
        "docstring": "\ub0a0\uc9dc \ubc94\uc704 \uac80\uc0c9",
        "args": [
          "self",
          "start_date",
          "end_date"
        ],
        "is_async": false
      },
      {
        "name": "get_document_by_path",
        "line": 316,
        "docstring": "\uacbd\ub85c\ub85c \ubb38\uc11c \uc870\ud68c",
        "args": [
          "self",
          "path"
        ],
        "is_async": false
      },
      {
        "name": "get_document",
        "line": 324,
        "docstring": "\ud30c\uc77c\uba85\uc73c\ub85c \ubb38\uc11c \uc870\ud68c (perfect_rag.py \ud638\ud658\uc6a9)",
        "args": [
          "self",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "get_by_filename",
        "line": 333,
        "docstring": "\ud30c\uc77c\uba85\uc73c\ub85c \ubb38\uc11c \uc870\ud68c (claimed_total \ud3ec\ud568, \ub300\uc18c\ubb38\uc790 \ubb34\uc2dc)\n\nArgs:\n    filename: \ud30c\uc77c\uba85 (\ud655\uc7a5\uc790 \ud3ec\ud568 \uac00\ub2a5)\n\nReturns:\n    \ubb38\uc11c \ub515\uc154\ub108\ub9ac (claimed_total \ud3ec\ud568) \ub610\ub294 None",
        "args": [
          "self",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "get_by_filename_fuzzy",
        "line": 349,
        "docstring": "\ud37c\uc9c0 \ub9e4\uce6d\uc73c\ub85c \ud30c\uc77c\uba85 \uac80\uc0c9 (\uc5b8\ub354\uc2a4\ucf54\uc5b4/\uacf5\ubc31/\ud2b9\uc218\uae30\ud638 \ubb34\uc2dc)\n\nArgs:\n    name: \uac80\uc0c9\ud560 \ud30c\uc77c\uba85 (\uc77c\ubd80\ub9cc \uc785\ub825 \uac00\ub2a5)\n\nReturns:\n    \uac00\uc7a5 \uc720\uc0ac\ud55c \ubb38\uc11c \ub515\uc154\ub108\ub9ac \ub610\ub294 None",
        "args": [
          "self",
          "name"
        ],
        "is_async": false
      },
      {
        "name": "get_text_preview",
        "line": 391,
        "docstring": "\ud30c\uc77c\uba85\uc73c\ub85c text_preview \uc870\ud68c (snippet \ubcf4\uac15\uc6a9)\n\nArgs:\n    filename: \ud30c\uc77c\uba85 (\ud655\uc7a5\uc790 \ud3ec\ud568 \uac00\ub2a5)\n\nReturns:\n    text_preview \ubb38\uc790\uc5f4 \ub610\ub294 None",
        "args": [
          "self",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "get_page_text",
        "line": 407,
        "docstring": "\ud2b9\uc815 \ubb38\uc11c\uc758 \ud2b9\uc815 \ud398\uc774\uc9c0 \ud14d\uc2a4\ud2b8 \ucd94\ucd9c (\uce90\uc2dc \uc9c0\uc6d0)\n\nArgs:\n    doc_id: \ubb38\uc11c ID (filename \ub610\ub294 path)\n    page: \ud398\uc774\uc9c0 \ubc88\ud638 (1-based)\n\nReturns:\n    \ud398\uc774\uc9c0 \ud14d\uc2a4\ud2b8 \ub610\ub294 None",
        "args": [
          "self",
          "doc_id",
          "page"
        ],
        "is_async": false
      },
      {
        "name": "update_document",
        "line": 458,
        "docstring": "\ubb38\uc11c \uba54\ud0c0\ub370\uc774\ud130 \uac04\ud3b8 \uc5c5\ub370\uc774\ud2b8 (perfect_rag.py \ud638\ud658\uc6a9)",
        "args": [
          "self",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "update_text_preview",
        "line": 501,
        "docstring": "\ud14d\uc2a4\ud2b8 \ubbf8\ub9ac\ubcf4\uae30 \uc5c5\ub370\uc774\ud2b8",
        "args": [
          "self",
          "path",
          "text_preview"
        ],
        "is_async": false
      },
      {
        "name": "get_statistics",
        "line": 509,
        "docstring": "DB \ud1b5\uacc4 \uc815\ubcf4",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "rebuild_fts_index",
        "line": 540,
        "docstring": "FTS \uc778\ub371\uc2a4 \uc7ac\uad6c\ucd95",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "list_unique_drafters",
        "line": 546,
        "docstring": "DB\uc5d0 \uc874\uc7ac\ud558\ub294 \uace0\uc720 \uae30\uc548\uc790 \ubaa9\ub85d \ubc18\ud658 (Closed-World Validation\uc6a9)\n\nReturns:\n    set: \uace0\uc720 \uae30\uc548\uc790 \uc774\ub984 \uc9d1\ud569",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "close",
        "line": 568,
        "docstring": "\ub370\uc774\ud130\ubca0\uc774\uc2a4 \uc5f0\uacb0 \uc885\ub8cc",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "count_unique_documents",
        "line": 573,
        "docstring": "\uace0\uc720 \ubb38\uc11c \uc218 \uce74\uc6b4\ud2b8 (\uc911\ubcf5 \uc81c\uac70, \ud655\uc7a5\uc790 \ud544\ud130)\n\nArgs:\n    allowed_ext: \ud5c8\uc6a9 \ud655\uc7a5\uc790 \ud29c\ud50c (\uae30\ubcf8: pdf, txt)\n\nReturns:\n    \uace0\uc720 \ubb38\uc11c \uc218",
        "args": [
          "self",
          "allowed_ext"
        ],
        "is_async": false
      },
      {
        "name": "count_by_extension",
        "line": 604,
        "docstring": "\ud655\uc7a5\uc790\ubcc4 \ubb38\uc11c \uc218 \uce74\uc6b4\ud2b8 (\ubb3c\ub9ac \ud30c\uc77c \uae30\uc900)\n\nReturns:\n    {'pdf': N, 'txt': M, 'others': K} \ud615\ud0dc\uc758 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "count_search_index",
        "line": 660,
        "docstring": "\uac80\uc0c9 \uc778\ub371\uc2a4\uc5d0 \ub4f1\ub85d\ub41c \uace0\uc720 \ubb38\uc11c \uc218\n\nReturns:\n    \uac80\uc0c9 \uac00\ub2a5\ud55c \uace0\uc720 \ubb38\uc11c \uc218",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "__enter__",
        "line": 697,
        "docstring": null,
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "__exit__",
        "line": 700,
        "docstring": null,
        "args": [
          "self",
          "exc_type",
          "exc_val",
          "exc_tb"
        ],
        "is_async": false
      },
      {
        "name": "slug",
        "line": 363,
        "docstring": "\ubb38\uc790\uc5f4 \uc815\uaddc\ud654: \uc18c\ubb38\uc790 + \ud2b9\uc218\uae30\ud638 \uc81c\uac70",
        "args": [
          "s"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "MetadataDB",
        "line": 18,
        "docstring": "PDF \uba54\ud0c0\ub370\uc774\ud130 SQLite DB \uad00\ub9ac",
        "methods": [
          "__init__",
          "init_database",
          "_migrate_schema",
          "add_document",
          "search_by_year",
          "search_documents",
          "count_documents",
          "search_by_category",
          "search_by_keyword",
          "search_by_date_range",
          "get_document_by_path",
          "get_document",
          "get_by_filename",
          "get_by_filename_fuzzy",
          "get_text_preview",
          "get_page_text",
          "update_document",
          "update_text_preview",
          "get_statistics",
          "rebuild_fts_index",
          "list_unique_drafters",
          "close",
          "count_unique_documents",
          "count_by_extension",
          "count_search_index",
          "__enter__",
          "__exit__"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "Phase 1.2: \uba54\ud0c0\ub370\uc774\ud130 DB \uad6c\ucd95\nSQLite\ub97c \uc0ac\uc6a9\ud55c PDF \uba54\ud0c0\ub370\uc774\ud130 \uad00\ub9ac"
  },
  "modules.search_module_hybrid": {
    "path": "modules/search_module_hybrid.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/search_module_hybrid.py",
    "lines_of_code": 249,
    "imports": [
      "app.core.logging",
      "app.core.logging.get_logger",
      "os",
      "sys",
      "time",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "modules.search_module",
      "modules.search_module.SearchModule",
      "rag_system.hybrid_search",
      "rag_system.hybrid_search.HybridSearch"
    ],
    "functions": [
      {
        "name": "test_hybrid_search",
        "line": 214,
        "docstring": "\ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9 \ud14c\uc2a4\ud2b8",
        "args": [],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 27,
        "docstring": "Args:\n    docs_dir: \ubb38\uc11c \ub514\ub809\ud1a0\ub9ac \uacbd\ub85c\n    config: \uc124\uc815 \ub515\uc154\ub108\ub9ac\n    use_hybrid: \ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9 \uc0ac\uc6a9 \uc5ec\ubd80",
        "args": [
          "self",
          "docs_dir",
          "config",
          "use_hybrid"
        ],
        "is_async": false
      },
      {
        "name": "_init_hybrid_search",
        "line": 43,
        "docstring": "\ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9 \ucd08\uae30\ud654",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "search_by_content",
        "line": 72,
        "docstring": "\ub0b4\uc6a9 \uae30\ubc18 \ubb38\uc11c \uac80\uc0c9 - \ud558\uc774\ube0c\ub9ac\ub4dc \ub610\ub294 \uae30\ubcf8 \uac80\uc0c9\n\nArgs:\n    query: \uac80\uc0c9 \ucffc\ub9ac\n    top_k: \ubc18\ud658\ud560 \ucd5c\ub300 \ubb38\uc11c \uc218\n    mode: \uac80\uc0c9 \ubaa8\ub4dc (\"hybrid\", \"basic\", \"auto\")\n        - hybrid: \ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9 \uac15\uc81c \uc0ac\uc6a9\n        - basic: \uae30\ubcf8 \uac80\uc0c9\ub9cc \uc0ac\uc6a9\n        - auto: \uc790\ub3d9 \uc120\ud0dd (\ubcf5\uc7a1\ud55c \ucffc\ub9ac\ub294 hybrid, \uac04\ub2e8\ud55c \ucffc\ub9ac\ub294 basic)\n\nReturns:\n    \uac80\uc0c9 \uacb0\uacfc \ub9ac\uc2a4\ud2b8",
        "args": [
          "self",
          "query",
          "top_k",
          "mode"
        ],
        "is_async": false
      },
      {
        "name": "_determine_search_mode",
        "line": 99,
        "docstring": "\ucffc\ub9ac \ubcf5\uc7a1\ub3c4\uc5d0 \ub530\ub77c \uac80\uc0c9 \ubaa8\ub4dc \uc790\ub3d9 \uc120\ud0dd",
        "args": [
          "self",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "_hybrid_search",
        "line": 139,
        "docstring": "\ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9 \uc2e4\ud589",
        "args": [
          "self",
          "query",
          "top_k"
        ],
        "is_async": false
      },
      {
        "name": "get_search_statistics",
        "line": 196,
        "docstring": "\uac80\uc0c9 \ud1b5\uacc4 \ubc18\ud658 (\ud558\uc774\ube0c\ub9ac\ub4dc \ud3ec\ud568)",
        "args": [
          "self"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "SearchModuleHybrid",
        "line": 24,
        "docstring": "\ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9\uc744 \uc9c0\uc6d0\ud558\ub294 SearchModule",
        "methods": [
          "__init__",
          "_init_hybrid_search",
          "search_by_content",
          "_determine_search_mode",
          "_hybrid_search",
          "get_search_statistics"
        ],
        "bases": [
          "SearchModule"
        ]
      }
    ],
    "entry_point": true,
    "docstring": "\ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9 \ubaa8\ub4c8 - BM25 + Vector \uac80\uc0c9 \ud1b5\ud569\nSearchModule\uc744 \ud655\uc7a5\ud558\uc5ec \ud558\uc774\ube0c\ub9ac\ub4dc \uac80\uc0c9 \uae30\ub2a5 \ucd94\uac00"
  },
  "modules.metadata_extractor": {
    "path": "modules/metadata_extractor.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/metadata_extractor.py",
    "lines_of_code": 524,
    "imports": [
      "app.core.logging",
      "app.core.logging.get_logger",
      "re",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Optional",
      "typing.Tuple",
      "typing.Any",
      "datetime",
      "datetime.datetime",
      "pathlib",
      "pathlib.Path"
    ],
    "functions": [
      {
        "name": "test_extractor",
        "line": 484,
        "docstring": "\uba54\ud0c0\ub370\uc774\ud130 \ucd94\ucd9c\uae30 \ud14c\uc2a4\ud2b8",
        "args": [],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 18,
        "docstring": null,
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "extract_all",
        "line": 155,
        "docstring": "\ubaa8\ub4e0 \uba54\ud0c0\ub370\uc774\ud130 \ucd94\ucd9c\n\nArgs:\n    text: PDF \ud14d\uc2a4\ud2b8\n    filename: \ud30c\uc77c\uba85 (\ucd94\uac00 \uc815\ubcf4 \ucd94\ucd9c\uc6a9)\n\nReturns:\n    \ucd94\ucd9c\ub41c \uba54\ud0c0\ub370\uc774\ud130 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "text",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "_normalize_text",
        "line": 191,
        "docstring": "\ud14d\uc2a4\ud2b8 \uc815\uaddc\ud654",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_dates",
        "line": 201,
        "docstring": "\ub0a0\uc9dc \uc815\ubcf4 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_amounts",
        "line": 264,
        "docstring": "\uae08\uc561 \uc815\ubcf4 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_department",
        "line": 306,
        "docstring": "\ubd80\uc11c \uc815\ubcf4 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_doc_type",
        "line": 319,
        "docstring": "\ubb38\uc11c \uc720\ud615 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_drafter",
        "line": 336,
        "docstring": "\uae30\uc548\uc790 \uc815\ubcf4 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_contacts",
        "line": 347,
        "docstring": "\uc5f0\ub77d\ucc98 \uc815\ubcf4 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_equipment",
        "line": 369,
        "docstring": "\uc7a5\ube44 \uc815\ubcf4 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_projects",
        "line": 391,
        "docstring": "\ud504\ub85c\uc81d\ud2b8/\ud504\ub85c\uadf8\ub7a8 \uc815\ubcf4 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_approval",
        "line": 406,
        "docstring": "\uacb0\uc7ac \uc815\ubcf4 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_companies",
        "line": 417,
        "docstring": "\ud68c\uc0ac/\uc5c5\uccb4\uba85 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_create_summary",
        "line": 442,
        "docstring": "\uba54\ud0c0\ub370\uc774\ud130 \uc694\uc57d \uc0dd\uc131",
        "args": [
          "self",
          "metadata"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "MetadataExtractor",
        "line": 15,
        "docstring": "PDF \uba54\ud0c0\ub370\uc774\ud130 \ucd94\ucd9c\uae30",
        "methods": [
          "__init__",
          "extract_all",
          "_normalize_text",
          "_extract_dates",
          "_extract_amounts",
          "_extract_department",
          "_extract_doc_type",
          "_extract_drafter",
          "_extract_contacts",
          "_extract_equipment",
          "_extract_projects",
          "_extract_approval",
          "_extract_companies",
          "_create_summary"
        ],
        "bases": []
      }
    ],
    "entry_point": true,
    "docstring": "\uace0\uae09 \uba54\ud0c0\ub370\uc774\ud130 \ucd94\ucd9c\uae30 - PDF\uc5d0\uc11c \uad6c\uc870\ud654\ub41c \uc815\ubcf4 \ucd94\ucd9c"
  },
  "modules.response_formatter": {
    "path": "modules/response_formatter.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/response_formatter.py",
    "lines_of_code": 957,
    "imports": [
      "re",
      "json",
      "html",
      "hashlib",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Any",
      "typing.Optional",
      "typing.Union",
      "typing.Callable",
      "dataclasses",
      "dataclasses.dataclass",
      "dataclasses.field",
      "collections",
      "collections.OrderedDict",
      "datetime",
      "datetime.datetime",
      "enum",
      "enum.Enum",
      "functools",
      "functools.lru_cache",
      "warnings",
      "argparse",
      "sys"
    ],
    "functions": [
      {
        "name": "create_formatter",
        "line": 793,
        "docstring": "\ud3ec\ub9f7\ud130 \uc0dd\uc131 \ud5ec\ud37c",
        "args": [
          "format_type",
          "theme",
          "language"
        ],
        "is_async": false
      },
      {
        "name": "format_as_markdown",
        "line": 804,
        "docstring": "\ub9c8\ud06c\ub2e4\uc6b4\uc73c\ub85c \ud3ec\ub9f7",
        "args": [
          "data",
          "formatter_type"
        ],
        "is_async": false
      },
      {
        "name": "format_as_html",
        "line": 817,
        "docstring": "HTML\ub85c \ud3ec\ub9f7",
        "args": [
          "data",
          "formatter_type"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 64,
        "docstring": null,
        "args": [
          "self",
          "template_str"
        ],
        "is_async": false
      },
      {
        "name": "_compile",
        "line": 68,
        "docstring": "\ud15c\ud50c\ub9bf \ucef4\ud30c\uc77c",
        "args": [
          "self",
          "template_str"
        ],
        "is_async": false
      },
      {
        "name": "render",
        "line": 83,
        "docstring": "\ud15c\ud50c\ub9bf \ub80c\ub354\ub9c1",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "get",
        "line": 138,
        "docstring": "\ubc88\uc5ed \ubb38\uc790\uc5f4 \uac00\uc838\uc624\uae30",
        "args": [
          "cls",
          "key",
          "lang"
        ],
        "is_async": false
      },
      {
        "name": "get_theme",
        "line": 228,
        "docstring": "\ud14c\ub9c8 \uac00\uc838\uc624\uae30",
        "args": [
          "cls",
          "theme"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 235,
        "docstring": null,
        "args": [
          "self",
          "config"
        ],
        "is_async": false
      },
      {
        "name": "header",
        "line": 239,
        "docstring": "\ud5e4\ub354 \uc0dd\uc131",
        "args": [
          "self",
          "title",
          "level"
        ],
        "is_async": false
      },
      {
        "name": "divider",
        "line": 249,
        "docstring": "\uad6c\ubd84\uc120 \uc0dd\uc131",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "bullet_list",
        "line": 258,
        "docstring": "\ubd88\ub9bf \ub9ac\uc2a4\ud2b8 \uc0dd\uc131",
        "args": [
          "self",
          "items"
        ],
        "is_async": false
      },
      {
        "name": "table",
        "line": 272,
        "docstring": "\ud14c\uc774\ube14 \uc0dd\uc131",
        "args": [
          "self",
          "headers",
          "rows"
        ],
        "is_async": false
      },
      {
        "name": "_markdown_table",
        "line": 286,
        "docstring": "\ub9c8\ud06c\ub2e4\uc6b4 \ud14c\uc774\ube14",
        "args": [
          "self",
          "headers",
          "rows"
        ],
        "is_async": false
      },
      {
        "name": "_html_table",
        "line": 295,
        "docstring": "HTML \ud14c\uc774\ube14",
        "args": [
          "self",
          "headers",
          "rows"
        ],
        "is_async": false
      },
      {
        "name": "_text_table",
        "line": 314,
        "docstring": "\ud14d\uc2a4\ud2b8 \ud14c\uc774\ube14 (\ubc15\uc2a4 \uadf8\ub9ac\uae30)",
        "args": [
          "self",
          "headers",
          "rows"
        ],
        "is_async": false
      },
      {
        "name": "emoji",
        "line": 359,
        "docstring": "\uc774\ubaa8\uc9c0 \ub610\ub294 \ub300\uccb4 \ud14d\uc2a4\ud2b8 \ubc18\ud658",
        "args": [
          "self",
          "key"
        ],
        "is_async": false
      },
      {
        "name": "section",
        "line": 365,
        "docstring": "\uc139\uc158 \uc0dd\uc131",
        "args": [
          "self",
          "title",
          "content",
          "icon"
        ],
        "is_async": false
      },
      {
        "name": "__init__",
        "line": 395,
        "docstring": null,
        "args": [
          "self",
          "config"
        ],
        "is_async": false
      },
      {
        "name": "_get_cached_format",
        "line": 402,
        "docstring": "\uce90\uc2dc\ub41c \ud3ec\ub9f7 \uac00\uc838\uc624\uae30",
        "args": [
          "self",
          "cache_key"
        ],
        "is_async": false
      },
      {
        "name": "_cache_format",
        "line": 408,
        "docstring": "\ud3ec\ub9f7 \uce90\uc2f1",
        "args": [
          "self",
          "cache_key",
          "formatted"
        ],
        "is_async": false
      },
      {
        "name": "format_document_summary",
        "line": 415,
        "docstring": "\ubb38\uc11c \uc694\uc57d \ud3ec\ub9f7\ud305",
        "args": [
          "self",
          "doc_info",
          "query"
        ],
        "is_async": false
      },
      {
        "name": "format_statistics_response",
        "line": 494,
        "docstring": "\ud1b5\uacc4 \uc751\ub2f5 \ud3ec\ub9f7\ud305",
        "args": [
          "self",
          "stats_data",
          "query_type"
        ],
        "is_async": false
      },
      {
        "name": "format_asset_search_response",
        "line": 544,
        "docstring": "\uc790\uc0b0 \uac80\uc0c9 \uacb0\uacfc \ud3ec\ub9f7\ud305",
        "args": [
          "self",
          "assets",
          "search_criteria"
        ],
        "is_async": false
      },
      {
        "name": "format_comparison_response",
        "line": 613,
        "docstring": "\ube44\uad50 \ubd84\uc11d \uacb0\uacfc \ud3ec\ub9f7\ud305",
        "args": [
          "self",
          "comparison_data"
        ],
        "is_async": false
      },
      {
        "name": "format_error",
        "line": 663,
        "docstring": "\uc5d0\ub7ec \uba54\uc2dc\uc9c0 \ud3ec\ub9f7\ud305",
        "args": [
          "self",
          "error_msg",
          "details"
        ],
        "is_async": false
      },
      {
        "name": "format_json_response",
        "line": 681,
        "docstring": "JSON \ud615\uc2dd\uc73c\ub85c \ud3ec\ub9f7\ud305",
        "args": [
          "self",
          "data"
        ],
        "is_async": false
      },
      {
        "name": "_format_search_criteria",
        "line": 695,
        "docstring": "\uac80\uc0c9 \uc870\uac74 \ud3ec\ub9f7\ud305",
        "args": [
          "self",
          "criteria"
        ],
        "is_async": false
      },
      {
        "name": "_categorize_assets",
        "line": 711,
        "docstring": "\uc790\uc0b0 \uce74\ud14c\uace0\ub9ac \ubd84\ub958",
        "args": [
          "self",
          "assets"
        ],
        "is_async": false
      },
      {
        "name": "_parse_amount",
        "line": 737,
        "docstring": "\uae08\uc561 \ud30c\uc2f1",
        "args": [
          "self",
          "amount_str"
        ],
        "is_async": false
      },
      {
        "name": "extract_key_points",
        "line": 753,
        "docstring": "\ud575\uc2ec \ud3ec\uc778\ud2b8 \ucd94\ucd9c",
        "args": [
          "self",
          "text",
          "max_points"
        ],
        "is_async": false
      },
      {
        "name": "set_config",
        "line": 781,
        "docstring": "\uc124\uc815 \ubcc0\uacbd",
        "args": [
          "self",
          "config"
        ],
        "is_async": false
      },
      {
        "name": "clear_cache",
        "line": 786,
        "docstring": "\uce90\uc2dc \ud074\ub9ac\uc5b4",
        "args": [
          "self"
        ],
        "is_async": false
      },
      {
        "name": "render",
        "line": 74,
        "docstring": null,
        "args": [],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "FormatType",
        "line": 32,
        "docstring": "\ucd9c\ub825 \ud615\uc2dd \ud0c0\uc785",
        "methods": [],
        "bases": [
          "Enum"
        ]
      },
      {
        "name": "ThemeStyle",
        "line": 40,
        "docstring": "\ud14c\ub9c8 \uc2a4\ud0c0\uc77c",
        "methods": [],
        "bases": [
          "Enum"
        ]
      },
      {
        "name": "FormatConfig",
        "line": 49,
        "docstring": "\ud3ec\ub9f7 \uc124\uc815",
        "methods": [],
        "bases": []
      },
      {
        "name": "Template",
        "line": 61,
        "docstring": "\uac04\ub2e8\ud55c \ud15c\ud50c\ub9bf \uc5d4\uc9c4",
        "methods": [
          "__init__",
          "_compile",
          "render"
        ],
        "bases": []
      },
      {
        "name": "I18n",
        "line": 87,
        "docstring": "\uad6d\uc81c\ud654 \uc9c0\uc6d0",
        "methods": [
          "get"
        ],
        "bases": []
      },
      {
        "name": "StyleManager",
        "line": 142,
        "docstring": "\uc2a4\ud0c0\uc77c \uad00\ub9ac\uc790",
        "methods": [
          "get_theme"
        ],
        "bases": []
      },
      {
        "name": "ComponentBuilder",
        "line": 232,
        "docstring": "\ucef4\ud3ec\ub10c\ud2b8 \ube4c\ub354 - \uc7ac\uc0ac\uc6a9 \uac00\ub2a5\ud55c UI \ucef4\ud3ec\ub10c\ud2b8",
        "methods": [
          "__init__",
          "header",
          "divider",
          "bullet_list",
          "table",
          "_markdown_table",
          "_html_table",
          "_text_table",
          "emoji",
          "section"
        ],
        "bases": []
      },
      {
        "name": "ResponseFormatter",
        "line": 392,
        "docstring": "\uace0\uae09 \uc751\ub2f5 \ud3ec\ub9f7\ud130",
        "methods": [
          "__init__",
          "_get_cached_format",
          "_cache_format",
          "format_document_summary",
          "format_statistics_response",
          "format_asset_search_response",
          "format_comparison_response",
          "format_error",
          "format_json_response",
          "_format_search_criteria",
          "_categorize_assets",
          "_parse_amount",
          "extract_key_points",
          "set_config",
          "clear_cache"
        ],
        "bases": []
      }
    ],
    "entry_point": true,
    "docstring": "from app.core.logging import get_logger\n\uace0\uae09 \uc751\ub2f5 \ud3ec\ub9f7\ud130 \uc2dc\uc2a4\ud15c\n\n\uc8fc\uc694 \uae30\ub2a5:\n- \ud15c\ud50c\ub9bf \uae30\ubc18 \ud3ec\ub9f7\ud305\n- \ub2e4\uc911 \ucd9c\ub825 \ud615\uc2dd \uc9c0\uc6d0 (Plain, Markdown, HTML, JSON)\n- \uc2a4\ud0c0\uc77c \ud14c\ub9c8 \uc2dc\uc2a4\ud15c\n- \uad6d\uc81c\ud654(i18n) \uc9c0\uc6d0\n- \ud3ec\ub9f7 \uce90\uc2f1 \ubc0f \uc7ac\uc0ac\uc6a9\n- \ub3d9\uc801 \ub808\uc774\uc544\uc6c3 \uc0dd\uc131\n- \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5 \uac00\ub2a5\ud55c \ucef4\ud3ec\ub10c\ud2b8"
  },
  "modules.document_module": {
    "path": "modules/document_module.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/document_module.py",
    "lines_of_code": 418,
    "imports": [
      "os",
      "re",
      "time",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.List",
      "typing.Dict",
      "typing.Any",
      "typing.Optional",
      "typing.Tuple",
      "collections",
      "collections.OrderedDict",
      "concurrent.futures",
      "concurrent.futures.ThreadPoolExecutor",
      "concurrent.futures.as_completed",
      "pdfplumber",
      "hashlib",
      "json",
      "ocr_processor",
      "ocr_processor.OCRProcessor"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 35,
        "docstring": "Args:\n    config: \uc124\uc815 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "config"
        ],
        "is_async": false
      },
      {
        "name": "extract_pdf_text",
        "line": 57,
        "docstring": "PDF \ud30c\uc77c\uc5d0\uc11c \ud14d\uc2a4\ud2b8 \ucd94\ucd9c (\uce90\uc2f1 \ud3ec\ud568)\n\nArgs:\n    pdf_path: PDF \ud30c\uc77c \uacbd\ub85c\n    use_cache: \uce90\uc2dc \uc0ac\uc6a9 \uc5ec\ubd80\n\nReturns:\n    \ucd94\ucd9c\ub41c \uc815\ubcf4 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "pdf_path",
          "use_cache"
        ],
        "is_async": false
      },
      {
        "name": "extract_pdf_text_with_retry",
        "line": 129,
        "docstring": "\uc7ac\uc2dc\ub3c4 \ub85c\uc9c1\uc774 \ud3ec\ud568\ub41c PDF \ud14d\uc2a4\ud2b8 \ucd94\ucd9c",
        "args": [
          "self",
          "pdf_path",
          "max_retries"
        ],
        "is_async": false
      },
      {
        "name": "extract_txt_content",
        "line": 149,
        "docstring": "TXT \ud30c\uc77c\uc5d0\uc11c \ub0b4\uc6a9 \ucd94\ucd9c",
        "args": [
          "self",
          "txt_path"
        ],
        "is_async": false
      },
      {
        "name": "process_documents_parallel",
        "line": 171,
        "docstring": "\uc5ec\ub7ec \ubb38\uc11c\ub97c \ubcd1\ub82c\ub85c \ucc98\ub9ac\n\nArgs:\n    file_paths: \ucc98\ub9ac\ud560 \ud30c\uc77c \uacbd\ub85c \ub9ac\uc2a4\ud2b8\n    process_func: \uac01 \ud30c\uc77c\uc5d0 \uc801\uc6a9\ud560 \ud568\uc218\n    max_workers: \ucd5c\ub300 \uc6cc\ucee4 \uc218\n\nReturns:\n    \ucc98\ub9ac \uacb0\uacfc \ub9ac\uc2a4\ud2b8",
        "args": [
          "self",
          "file_paths",
          "process_func",
          "max_workers"
        ],
        "is_async": false
      },
      {
        "name": "optimize_context",
        "line": 206,
        "docstring": "\ucffc\ub9ac\uc5d0 \ub9de\uac8c \ud14d\uc2a4\ud2b8 \ucee8\ud14d\uc2a4\ud2b8 \ucd5c\uc801\ud654\n\nArgs:\n    text: \uc6d0\ubcf8 \ud14d\uc2a4\ud2b8\n    query: \uac80\uc0c9 \ucffc\ub9ac\n    max_length: \ucd5c\ub300 \ucee8\ud14d\uc2a4\ud2b8 \uae38\uc774\n\nReturns:\n    \ucd5c\uc801\ud654\ub41c \ud14d\uc2a4\ud2b8",
        "args": [
          "self",
          "text",
          "query",
          "max_length"
        ],
        "is_async": false
      },
      {
        "name": "extract_context_window",
        "line": 253,
        "docstring": "\ud0a4\uc6cc\ub4dc \uc8fc\ubcc0 \ucee8\ud14d\uc2a4\ud2b8 \ucd94\ucd9c\n\nArgs:\n    text: \uc6d0\ubcf8 \ud14d\uc2a4\ud2b8\n    keyword: \uac80\uc0c9 \ud0a4\uc6cc\ub4dc\n    window_size: \ucee8\ud14d\uc2a4\ud2b8 \ucc3d \ud06c\uae30 (\uc55e\ub4a4 \uae00\uc790 \uc218)\n\nReturns:\n    \ud0a4\uc6cc\ub4dc \uc8fc\ubcc0 \ud14d\uc2a4\ud2b8",
        "args": [
          "self",
          "text",
          "keyword",
          "window_size"
        ],
        "is_async": false
      },
      {
        "name": "_extract_metadata_from_text",
        "line": 295,
        "docstring": "\ud14d\uc2a4\ud2b8\uc5d0\uc11c \uba54\ud0c0\ub370\uc774\ud130 \ucd94\ucd9c",
        "args": [
          "self",
          "text"
        ],
        "is_async": false
      },
      {
        "name": "_extract_info_from_filename",
        "line": 366,
        "docstring": "\ud30c\uc77c\uba85\uc5d0\uc11c \uc815\ubcf4 \ucd94\ucd9c",
        "args": [
          "self",
          "filename"
        ],
        "is_async": false
      },
      {
        "name": "get_document_stats",
        "line": 396,
        "docstring": "\ubb38\uc11c \ud1b5\uacc4 \uc815\ubcf4 \ubc18\ud658",
        "args": [
          "self",
          "file_path"
        ],
        "is_async": false
      },
      {
        "name": "clear_cache",
        "line": 415,
        "docstring": "\ubb38\uc11c \uce90\uc2dc \ucd08\uae30\ud654",
        "args": [
          "self"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "DocumentModule",
        "line": 32,
        "docstring": "\ubb38\uc11c \ucc98\ub9ac \ud1b5\ud569 \ubaa8\ub4c8",
        "methods": [
          "__init__",
          "extract_pdf_text",
          "extract_pdf_text_with_retry",
          "extract_txt_content",
          "process_documents_parallel",
          "optimize_context",
          "extract_context_window",
          "_extract_metadata_from_text",
          "_extract_info_from_filename",
          "get_document_stats",
          "clear_cache"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "from app.core.logging import get_logger\n\ubb38\uc11c \ucc98\ub9ac \ubaa8\ub4c8 - Perfect RAG\uc5d0\uc11c \ubd84\ub9ac\ub41c \ubb38\uc11c \ucc98\ub9ac \uae30\ub2a5\n2025-09-29 \ub9ac\ud329\ud1a0\ub9c1\n\n\uc774 \ubaa8\ub4c8\uc740 PDF/TXT \ubb38\uc11c \ucc98\ub9ac, \ud14d\uc2a4\ud2b8 \ucd94\ucd9c, \uba54\ud0c0\ub370\uc774\ud130 \ucd94\ucd9c \ub4f1\n\ubb38\uc11c \uad00\ub828 \uae30\ub2a5\uc744 \ub2f4\ub2f9\ud569\ub2c8\ub2e4."
  },
  "modules.statistics_module": {
    "path": "modules/statistics_module.py",
    "absolute_path": "/home/wnstn4647/AI-CHAT/modules/statistics_module.py",
    "lines_of_code": 569,
    "imports": [
      "os",
      "re",
      "pathlib",
      "pathlib.Path",
      "typing",
      "typing.Dict",
      "typing.List",
      "typing.Any",
      "typing.Optional",
      "typing.Tuple",
      "collections",
      "collections.defaultdict",
      "collections.Counter",
      "datetime",
      "datetime.datetime",
      "json"
    ],
    "functions": [
      {
        "name": "__init__",
        "line": 25,
        "docstring": "Args:\n    config: \uc124\uc815 \ub515\uc154\ub108\ub9ac",
        "args": [
          "self",
          "config"
        ],
        "is_async": false
      },
      {
        "name": "collect_statistics_data",
        "line": 36,
        "docstring": "\ud1b5\uacc4 \ub370\uc774\ud130 \uc218\uc9d1 \ubc0f \uad6c\uc870\ud654\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \ucffc\ub9ac\n    metadata_cache: \uba54\ud0c0\ub370\uc774\ud130 \uce90\uc2dc\n\nReturns:\n    \uad6c\uc870\ud654\ub41c \ud1b5\uacc4 \ub370\uc774\ud130",
        "args": [
          "self",
          "query",
          "metadata_cache"
        ],
        "is_async": false
      },
      {
        "name": "_collect_yearly_purchase_stats",
        "line": 73,
        "docstring": "\uc5f0\ub3c4\ubcc4 \uad6c\ub9e4 \ud1b5\uacc4 \uc218\uc9d1",
        "args": [
          "self",
          "metadata_cache",
          "target_year"
        ],
        "is_async": false
      },
      {
        "name": "_collect_drafter_stats",
        "line": 136,
        "docstring": "\uae30\uc548\uc790\ubcc4 \ud1b5\uacc4 \uc218\uc9d1",
        "args": [
          "self",
          "metadata_cache",
          "target_year"
        ],
        "is_async": false
      },
      {
        "name": "_collect_monthly_repair_stats",
        "line": 190,
        "docstring": "\uc6d4\ubcc4 \uc218\ub9ac \ud1b5\uacc4 \uc218\uc9d1",
        "args": [
          "self",
          "metadata_cache",
          "target_year"
        ],
        "is_async": false
      },
      {
        "name": "_collect_category_stats",
        "line": 255,
        "docstring": "\uce74\ud14c\uace0\ub9ac\ubcc4 \ud1b5\uacc4 \uc218\uc9d1",
        "args": [
          "self",
          "metadata_cache",
          "target_year"
        ],
        "is_async": false
      },
      {
        "name": "_collect_general_stats",
        "line": 318,
        "docstring": "\uc804\uccb4 \uc77c\ubc18 \ud1b5\uacc4 \uc218\uc9d1",
        "args": [
          "self",
          "metadata_cache",
          "target_year"
        ],
        "is_async": false
      },
      {
        "name": "generate_statistics_report",
        "line": 386,
        "docstring": "\ud1b5\uacc4 \ub9ac\ud3ec\ud2b8 \uc0dd\uc131\n\nArgs:\n    query: \uc0ac\uc6a9\uc790 \ucffc\ub9ac\n    metadata_cache: \uba54\ud0c0\ub370\uc774\ud130 \uce90\uc2dc\n    formatter: \uc751\ub2f5 \ud3ec\ub9f7\ud130 (\uc120\ud0dd\uc801)\n\nReturns:\n    \ud3ec\ub9f7\ub41c \ud1b5\uacc4 \ub9ac\ud3ec\ud2b8",
        "args": [
          "self",
          "query",
          "metadata_cache",
          "formatter"
        ],
        "is_async": false
      },
      {
        "name": "_format_basic_report",
        "line": 414,
        "docstring": "\uae30\ubcf8 \ud14d\uc2a4\ud2b8 \ud615\uc2dd \ub9ac\ud3ec\ud2b8 \uc0dd\uc131",
        "args": [
          "self",
          "stats_data"
        ],
        "is_async": false
      },
      {
        "name": "_parse_amount",
        "line": 459,
        "docstring": "\uae08\uc561 \ubb38\uc790\uc5f4\uc744 \uc22b\uc790\ub85c \ud30c\uc2f1",
        "args": [
          "self",
          "amount_str"
        ],
        "is_async": false
      },
      {
        "name": "analyze_trends",
        "line": 470,
        "docstring": "\ud2b8\ub80c\ub4dc \ubd84\uc11d\n\nArgs:\n    metadata_cache: \uba54\ud0c0\ub370\uc774\ud130 \uce90\uc2dc\n    period: \ubd84\uc11d \uae30\uac04 ('yearly', 'monthly', 'quarterly')\n\nReturns:\n    \ud2b8\ub80c\ub4dc \ubd84\uc11d \uacb0\uacfc",
        "args": [
          "self",
          "metadata_cache",
          "period"
        ],
        "is_async": false
      },
      {
        "name": "get_summary_statistics",
        "line": 522,
        "docstring": "\uc694\uc57d \ud1b5\uacc4 \ubc18\ud658\n\nArgs:\n    metadata_cache: \uba54\ud0c0\ub370\uc774\ud130 \uce90\uc2dc\n\nReturns:\n    \uc694\uc57d \ud1b5\uacc4",
        "args": [
          "self",
          "metadata_cache"
        ],
        "is_async": false
      },
      {
        "name": "_get_date_range",
        "line": 540,
        "docstring": "\ub0a0\uc9dc \ubc94\uc704 \ubc18\ud658",
        "args": [
          "self",
          "metadata_cache"
        ],
        "is_async": false
      },
      {
        "name": "_count_categories",
        "line": 547,
        "docstring": "\uce74\ud14c\uace0\ub9ac\ubcc4 \uac1c\uc218 \ubc18\ud658",
        "args": [
          "self",
          "metadata_cache"
        ],
        "is_async": false
      },
      {
        "name": "_get_top_keywords",
        "line": 561,
        "docstring": "\uc0c1\uc704 \ud0a4\uc6cc\ub4dc \ucd94\ucd9c",
        "args": [
          "self",
          "metadata_cache",
          "top_n"
        ],
        "is_async": false
      }
    ],
    "classes": [
      {
        "name": "StatisticsModule",
        "line": 22,
        "docstring": "\ud1b5\uacc4 \ubc0f \ub9ac\ud3ec\ud2b8 \uc0dd\uc131 \ud1b5\ud569 \ubaa8\ub4c8",
        "methods": [
          "__init__",
          "collect_statistics_data",
          "_collect_yearly_purchase_stats",
          "_collect_drafter_stats",
          "_collect_monthly_repair_stats",
          "_collect_category_stats",
          "_collect_general_stats",
          "generate_statistics_report",
          "_format_basic_report",
          "_parse_amount",
          "analyze_trends",
          "get_summary_statistics",
          "_get_date_range",
          "_count_categories",
          "_get_top_keywords"
        ],
        "bases": []
      }
    ],
    "entry_point": false,
    "docstring": "from app.core.logging import get_logger\n\ud1b5\uacc4 \ubc0f \ub9ac\ud3ec\ud2b8 \ubaa8\ub4c8 - Perfect RAG\uc5d0\uc11c \ubd84\ub9ac\ub41c \ud1b5\uacc4/\ubd84\uc11d \uae30\ub2a5\n2025-09-29 \ub9ac\ud329\ud1a0\ub9c1\n\n\uc774 \ubaa8\ub4c8\uc740 \ubb38\uc11c \ud1b5\uacc4 \ubd84\uc11d, \ub9ac\ud3ec\ud2b8 \uc0dd\uc131, \ub370\uc774\ud130 \uc2dc\uac01\ud654 \ub4f1\n\ud1b5\uacc4 \uad00\ub828 \uae30\ub2a5\uc744 \ub2f4\ub2f9\ud569\ub2c8\ub2e4."
  }
}