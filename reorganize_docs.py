#!/usr/bin/env python3
"""
Î¨∏ÏÑú Ìè¥Îçî ÏôÑÏ†Ñ Ïû¨Ï†ïÎ¶¨
"""
import os
import shutil
from pathlib import Path
import re
from collections import defaultdict

def reorganize_documents():
    docs_dir = Path("docs")

    # ÌÜµÍ≥Ñ
    stats = defaultdict(int)

    # 1. 2025ÎÖÑ Ìè¥Îçî ÏÉùÏÑ± (ÎàÑÎùΩÎê®)
    (docs_dir / "year_2025").mkdir(exist_ok=True)

    # 2. Î£®Ìä∏Ïóê ÏûàÎäî Î™®Îì† PDF ÌååÏùº Ï†ïÎ¶¨
    pdf_files = list(docs_dir.glob("*.pdf"))
    print(f"üìÅ {len(pdf_files)}Í∞ú PDF ÌååÏùº Ï†ïÎ¶¨ ÏãúÏûë...")

    for pdf_file in pdf_files:
        filename = pdf_file.name

        # Ïó∞ÎèÑ Ï∂îÏ∂ú
        year_match = re.match(r'(\d{4})', filename)
        if year_match:
            year = int(year_match.group(1))

            # Ïó∞ÎèÑÎ≥Ñ Ìè¥ÎçîÎ°ú Ïù¥Îèô
            year_folder = docs_dir / f"year_{year}"
            year_folder.mkdir(exist_ok=True)

            new_path = year_folder / filename
            shutil.move(str(pdf_file), str(new_path))
            stats[f'year_{year}'] += 1
            print(f"  ‚úÖ {filename} ‚Üí year_{year}/")

            # Ï∂îÍ∞Ä Î∂ÑÎ•ò
            # 1. ÏµúÍ∑º Î¨∏ÏÑú (2023-2025)
            if year >= 2023:
                recent_path = docs_dir / "recent" / filename
                if not recent_path.exists():
                    shutil.copy2(new_path, recent_path)
                    stats['recent'] += 1

            # 2. ÏïÑÏπ¥Ïù¥Î∏å (2014-2016)
            elif year <= 2016:
                archive_path = docs_dir / "archive" / filename
                if not archive_path.exists():
                    shutil.copy2(new_path, archive_path)
                    stats['archive_copy'] += 1

            # 3. Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ Ïã¨Î≥ºÎ¶≠ ÎßÅÌÅ¨
            category = None
            if 'Íµ¨Îß§' in filename:
                category = 'purchase'
            elif 'ÏàòÎ¶¨' in filename or 'Î≥¥Ïàò' in filename:
                category = 'repair'
            elif 'Í≤ÄÌÜ†' in filename:
                category = 'review'
            elif 'ÌèêÍ∏∞' in filename:
                category = 'disposal'
            elif 'ÏÜåÎ™®Ìíà' in filename:
                category = 'consumables'

            if category:
                cat_folder = docs_dir / f"category_{category}"
                cat_folder.mkdir(exist_ok=True)
                link_path = cat_folder / filename
                if not link_path.exists():
                    try:
                        # WindowsÎäî Ïã¨Î≥ºÎ¶≠ ÎßÅÌÅ¨ ÎåÄÏã† Î≥µÏÇ¨
                        shutil.copy2(new_path, link_path)
                        stats[f'category_{category}'] += 1
                    except:
                        pass

    # 3. Í≤∞Í≥º Ï∂úÎ†•
    print("\nüìä Ï†ïÎ¶¨ ÏôÑÎ£å!")
    print("="*50)

    # Ïó∞ÎèÑÎ≥Ñ ÌÜµÍ≥Ñ
    print("\nüìÖ Ïó∞ÎèÑÎ≥Ñ Î¨∏ÏÑú:")
    for year in range(2014, 2026):
        year_key = f'year_{year}'
        if stats[year_key] > 0:
            print(f"  {year}ÎÖÑ: {stats[year_key]}Í∞ú")

    print(f"\nüìÅ ÌäπÎ≥Ñ Ìè¥Îçî:")
    print(f"  recent (2023-2025): {stats['recent']}Í∞ú")
    print(f"  archive Ï∂îÍ∞Ä: {stats['archive_copy']}Í∞ú")

    print(f"\nüìÇ Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ:")
    for cat in ['purchase', 'repair', 'review', 'disposal', 'consumables']:
        if stats[f'category_{cat}'] > 0:
            print(f"  {cat}: {stats[f'category_{cat}']}Í∞ú")

    # ÏµúÏ¢Ö Íµ¨Ï°∞ ÌôïÏù∏
    print("\nüìã ÏµúÏ¢Ö Ìè¥Îçî Íµ¨Ï°∞:")
    for folder in sorted(docs_dir.iterdir()):
        if folder.is_dir():
            pdf_count = len(list(folder.glob("*.pdf")))
            if pdf_count > 0:
                print(f"  {folder.name}/: {pdf_count}Í∞ú PDF")

if __name__ == "__main__":
    reorganize_documents()