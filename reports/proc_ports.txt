🔍 Process Management Verification
===================================
Date: Wed Oct 29 19:50:09 KST 2025

1. Current Python processes:
wnstn46+ 3047314  0.2  1.1 2173980 193716 pts/12 Sl+  19:25   0:03 /home/wnstn4647/AI-CHAT/.venv/bin/python -m uvicorn app.api.main:app --host 0.0.0.0 --port 7860 --log-level info
wnstn46+ 3047365  0.3  0.9 3743344 148468 pts/12 Sl+  19:25   0:04 /home/wnstn4647/AI-CHAT/.venv/bin/python3 /home/wnstn4647/AI-CHAT/.venv/bin/streamlit run web_interface.py --server.port 8501 --server.address 0.0.0.0 --server.headless true --browser.gatherUsageStats false

2. Port usage check:
   Port 8501 (Streamlit):
COMMAND       PID      USER   FD   TYPE   DEVICE SIZE/OFF NODE NAME
streamlit 3047365 wnstn4647    9u  IPv4 41010189      0t0  TCP *:8501 (LISTEN)
streamlit 3047365 wnstn4647   12u  IPv4 41010386      0t0  TCP 192.168.132.212:8501->CHA-MT-MAIN.mshome.net:50938 (ESTABLISHED)

   Port 7860 (FastAPI):
COMMAND     PID      USER   FD   TYPE   DEVICE SIZE/OFF NODE NAME
python  3047314 wnstn4647   13u  IPv4 41000151      0t0  TCP *:7860 (LISTEN)

3. Testing process cleanup...

Started dummy FastAPI on 7860 (PID: 3063993)
Started dummy Streamlit on 8501 (PID: 3063994)
Processes running...
Simulating Ctrl+C...
Cleaning up processes...
Cleaning up processes...

4. Analyzing start_ai_chat.sh trap handling:
76:    cleanup
84:    cleanup
89:cleanup() {
94:        kill "$API_PID" 2>/dev/null || true
97:    pkill -f "uvicorn.*app.api.main" 2>/dev/null || true
219:    trap 'error_handler $LINENO' ERR
220:    trap interrupt_handler INT TERM
247:                lsof -i ":$PORT" -t | xargs kill -9 2>/dev/null || true
251:            pkill -f "streamlit.*web_interface.py" 2>/dev/null || true
292:    pkill -f "uvicorn.*app.api.main" 2>/dev/null || true

5. Checking for zombie processes:
No zombie processes

6. Process group strategy:
   - FastAPI runs on port 7860 in background (&)
   - Streamlit runs on port 8501 in foreground
   - Ctrl+C terminates Streamlit directly
   - Trap handler cleans up FastAPI via stored PID
   - Error trap ensures cleanup on unexpected exit

✅ Process management verification complete
📄 Report saved to: reports/proc_ports.txt
